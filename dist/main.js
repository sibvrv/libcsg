!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.libcsg=e():t.libcsg=e()}(global,(function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="/",n(n.s=35)}([function(t,e){const n=5e-6*1e-5*Math.sin(.1);let r=1;t.exports={_CSGDEBUG:!1,defaultResolution2D:32,defaultResolution3D:12,EPS:1e-5,angleEPS:.1,areaEPS:n,all:0,top:1,bottom:2,left:3,right:4,front:5,back:6,staticTag:r,getTag:()=>r++}},function(t,e,n){const{IsFloat:r}=n(6),o=n(2),i=function(t,e,n){if(3===arguments.length)this._x=parseFloat(t),this._y=parseFloat(e),this._z=parseFloat(n);else if(2===arguments.length)this._x=parseFloat(t),this._y=parseFloat(e),this._z=0;else{var s=!0;if(1===arguments.length)if("object"==typeof t)t instanceof i?(this._x=t._x,this._y=t._y,this._z=t._z):t instanceof o?(this._x=t._x,this._y=t._y,this._z=0):t instanceof Array?t.length<2||t.length>3?s=!1:(this._x=parseFloat(t[0]),this._y=parseFloat(t[1]),3===t.length?this._z=parseFloat(t[2]):this._z=0):"x"in t&&"y"in t?(this._x=parseFloat(t.x),this._y=parseFloat(t.y),this._z="z"in t?parseFloat(t.z):0):"_x"in t&&"_y"in t?(this._x=parseFloat(t._x),this._y=parseFloat(t._y),this._z="_z"in t?parseFloat(t._z):0):s=!1;else{var l=parseFloat(t);this._x=l,this._y=l,this._z=l}else s=!1;if(!s)throw new Error("wrong arguments");r(this._x)&&r(this._y)&&r(this._z)||(s=!1)}};i.Create=function(t,e,n){var r=Object.create(i.prototype);return r._x=t,r._y=e,r._z=n,r},i.prototype={get x(){return this._x},get y(){return this._y},get z(){return this._z},set x(t){throw new Error("Vector3D is immutable")},set y(t){throw new Error("Vector3D is immutable")},set z(t){throw new Error("Vector3D is immutable")},clone:function(){return i.Create(this._x,this._y,this._z)},negated:function(){return i.Create(-this._x,-this._y,-this._z)},abs:function(){return i.Create(Math.abs(this._x),Math.abs(this._y),Math.abs(this._z))},plus:function(t){return i.Create(this._x+t._x,this._y+t._y,this._z+t._z)},minus:function(t){return i.Create(this._x-t._x,this._y-t._y,this._z-t._z)},times:function(t){return i.Create(this._x*t,this._y*t,this._z*t)},dividedBy:function(t){return i.Create(this._x/t,this._y/t,this._z/t)},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z},lerp:function(t,e){return this.plus(t.minus(this).times(e))},lengthSquared:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSquared())},unit:function(){return this.dividedBy(this.length())},cross:function(t){return i.Create(this._y*t._z-this._z*t._y,this._z*t._x-this._x*t._z,this._x*t._y-this._y*t._x)},distanceTo:function(t){return this.minus(t).length()},distanceToSquared:function(t){return this.minus(t).lengthSquared()},equals:function(t){return this._x===t._x&&this._y===t._y&&this._z===t._z},multiply4x4:function(t){return t.leftMultiply1x3Vector(this)},transform:function(t){return t.leftMultiply1x3Vector(this)},toString:function(){return"("+this._x.toFixed(5)+", "+this._y.toFixed(5)+", "+this._z.toFixed(5)+")"},randomNonParallelVector:function(){var t=this.abs();return t._x<=t._y&&t._x<=t._z?i.Create(1,0,0):t._y<=t._x&&t._y<=t._z?i.Create(0,1,0):i.Create(0,0,1)},min:function(t){return i.Create(Math.min(this._x,t._x),Math.min(this._y,t._y),Math.min(this._z,t._z))},max:function(t){return i.Create(Math.max(this._x,t._x),Math.max(this._y,t._y),Math.max(this._z,t._z))}},t.exports=i},function(t,e,n){const{IsFloat:r}=n(6),o=function(t,e){if(2===arguments.length)this._x=parseFloat(t),this._y=parseFloat(e);else{var n=!0;if(1===arguments.length)if("object"==typeof t)t instanceof o?(this._x=t._x,this._y=t._y):t instanceof Array?(this._x=parseFloat(t[0]),this._y=parseFloat(t[1])):"x"in t&&"y"in t?(this._x=parseFloat(t.x),this._y=parseFloat(t.y)):n=!1;else{var i=parseFloat(t);this._x=i,this._y=i}else n=!1;if(n&&(r(this._x)&&r(this._y)||(n=!1)),!n)throw new Error("wrong arguments")}};o.fromAngle=function(t){return o.fromAngleRadians(t)},o.fromAngleDegrees=function(t){var e=Math.PI*t/180;return o.fromAngleRadians(e)},o.fromAngleRadians=function(t){return o.Create(Math.cos(t),Math.sin(t))},o.Create=function(t,e){var n=Object.create(o.prototype);return n._x=t,n._y=e,n},o.prototype={get x(){return this._x},get y(){return this._y},set x(t){throw new Error("Vector2D is immutable")},set y(t){throw new Error("Vector2D is immutable")},toVector3D:function(t){return new(n(1))(this._x,this._y,t)},equals:function(t){return this._x===t._x&&this._y===t._y},clone:function(){return o.Create(this._x,this._y)},negated:function(){return o.Create(-this._x,-this._y)},plus:function(t){return o.Create(this._x+t._x,this._y+t._y)},minus:function(t){return o.Create(this._x-t._x,this._y-t._y)},times:function(t){return o.Create(this._x*t,this._y*t)},dividedBy:function(t){return o.Create(this._x/t,this._y/t)},dot:function(t){return this._x*t._x+this._y*t._y},lerp:function(t,e){return this.plus(t.minus(this).times(e))},length:function(){return Math.sqrt(this.dot(this))},distanceTo:function(t){return this.minus(t).length()},distanceToSquared:function(t){return this.minus(t).lengthSquared()},lengthSquared:function(){return this.dot(this)},unit:function(){return this.dividedBy(this.length())},cross:function(t){return this._x*t._y-this._y*t._x},normal:function(){return o.Create(this._y,-this._x)},multiply4x4:function(t){return t.leftMultiply1x2Vector(this)},transform:function(t){return t.leftMultiply1x2Vector(this)},angle:function(){return this.angleRadians()},angleDegrees:function(){return 180*this.angleRadians()/Math.PI},angleRadians:function(){return Math.atan2(this._y,this._x)},min:function(t){return o.Create(Math.min(this._x,t._x),Math.min(this._y,t._y))},max:function(t){return o.Create(Math.max(this._x,t._x),Math.max(this._y,t._y))},toString:function(){return"("+this._x.toFixed(5)+", "+this._y.toFixed(5)+")"},abs:function(){return o.Create(Math.abs(this._x),Math.abs(this._y))}},t.exports=o},function(t,e,n){const r=n(2),o=n(1),i=n(5),s=n(10),{_CSGDEBUG:l,EPS:a,getTag:u,areaEPS:c}=n(0);let h=function(t,e,r){if(this.vertices=t,e||(e=h.defaultShared),this.shared=e,arguments.length>=3)this.plane=r;else{const e=n(4);this.plane=e.fromVector3Ds(t[0].pos,t[1].pos,t[2].pos)}if(l&&!this.checkIfConvex())throw new Error("Not convex!")};h.prototype={checkIfConvex:function(){return h.verticesConvex(this.vertices,this.plane.normal)},setColor:function(t){let e=h.Shared.fromColor.apply(this,arguments);return this.shared=e,this},getSignedVolume:function(){let t=0;for(let e=0;e<this.vertices.length-2;e++)t+=this.vertices[0].pos.dot(this.vertices[e+1].pos.cross(this.vertices[e+2].pos));return t/=6,t},getArea:function(){let t=0;for(let e=0;e<this.vertices.length-2;e++)t+=this.vertices[e+1].pos.minus(this.vertices[0].pos).cross(this.vertices[e+2].pos.minus(this.vertices[e+1].pos)).length();return t/=2,t},getTetraFeatures:function(t){let e=[];return t.forEach((function(t){"volume"===t?e.push(this.getSignedVolume()):"area"===t&&e.push(this.getArea())}),this),e},extrude:function(t){const{fromPolygons:e}=n(7);let o=[],s=this;s.plane.normal.dot(t)>0&&(s=s.flipped()),o.push(s);let l=s.translate(t),a=this.vertices.length,u=0,c=t.length();for(let t=0;t<a;t++){let e=[],n=t<a-1?t+1:0,f=u+s.vertices[t].pos.distanceTo(s.vertices[n].pos);e.push(i.fromPosAndUV(s.vertices[t].pos,new r(u,0))),e.push(i.fromPosAndUV(l.vertices[t].pos,new r(u,c))),e.push(i.fromPosAndUV(l.vertices[n].pos,new r(f,c))),e.push(i.fromPosAndUV(s.vertices[n].pos,new r(f,0)));let p=new h(e,this.shared);o.push(p),u=f}return l=l.flipped(),o.push(l),e(o)},translate:function(t){return this.transform(s.translation(t))},boundingSphere:function(){if(!this.cachedBoundingSphere){let t=this.boundingBox(),e=t[0].plus(t[1]).times(.5),n=t[1].minus(e).length();this.cachedBoundingSphere=[e,n]}return this.cachedBoundingSphere},boundingBox:function(){if(!this.cachedBoundingBox){let t,e,n=this.vertices,r=n.length;t=0===r?new o(0,0,0):n[0].pos,e=t;for(let o=1;o<r;o++){let r=n[o].pos;t=t.min(r),e=e.max(r)}this.cachedBoundingBox=[t,e]}return this.cachedBoundingBox},flipped:function(){let t=this.vertices.map((function(t){return t.flipped()}));t.reverse();let e=this.plane.flipped();return new h(t,this.shared,e)},transform:function(t){let e=this.vertices.map((function(e){return e.transform(t)})),n=this.plane.transform(t);return t.isMirroring()&&e.reverse(),new h(e,this.shared,n)},toString:function(){let t="Polygon plane: "+this.plane.toString()+"\n";return this.vertices.map((function(e){t+="  "+e.toString()+"\n"})),t},projectToOrthoNormalBasis:function(t){const e=n(9),{fromPointsNoCheck:r}=n(8);let o=r(this.vertices.map((function(e){return t.to2D(e.pos)}))),i=o.area();return Math.abs(i)<c?o=new e:i<0&&(o=o.flipped()),o},solidFromSlices:function(t){return n(48)(this,t)}},h.fromObject=function(t){const e=n(4);let r=t.vertices.map((function(t){return i.fromObject(t)})),o=h.Shared.fromObject(t.shared),s=e.fromObject(t.plane);return new h(r,o,s)},h.createFromPoints=function(t,e,n){let r,s=[];return t.map((function(t){let e=new o(t),n=new i(e);s.push(n)})),r=arguments.length<3?new h(s,e):new h(s,e,n),r},h.verticesConvex=function(t,e){let n=t.length;if(n>2){let r=t[n-2].pos,o=t[n-1].pos;for(let i=0;i<n;i++){let n=t[i].pos;if(!h.isConvexPoint(r,o,n,e))return!1;r=o,o=n}}return!0},h.isConvexPoint=function(t,e,n,r){return e.minus(t).cross(n.minus(e)).dot(r)>=0},h.isStrictlyConvexPoint=function(t,e,n,r){return e.minus(t).cross(n.minus(e)).dot(r)>=a},h.Shared=function(t){if(null!=t&&4!==t.length)throw new Error("Expecting 4 element array");this.color=t},h.Shared.fromObject=function(t){return new h.Shared(t.color)},h.Shared.fromColor=function(t){let e;if(1===arguments.length)e=arguments[0].slice();else{e=[];for(let t=0;t<arguments.length;t++)e.push(arguments[t])}if(3===e.length)e.push(1);else if(4!==e.length)throw new Error("setColor expects either an array with 3 or 4 elements, or 3 or 4 parameters.");return new h.Shared(e)},h.Shared.prototype={getTag:function(){let t=this.tag;return t||(t=u(),this.tag=t),t},getHash:function(){return this.color?this.color.join("/"):"null"}},h.defaultShared=new h.Shared(null),t.exports=h},function(t,e,n){const r=n(1),o=n(16),{EPS:i,getTag:s}=n(0),l=function(t,e){this.normal=t,this.w=e};l.fromObject=function(t){let e=new r(t.normal),n=parseFloat(t.w);return new l(e,n)},l.fromVector3Ds=function(t,e,n){let r=e.minus(t).cross(n.minus(t)).unit();return new l(r,r.dot(t))},l.anyPlaneFromVector3Ds=function(t,e,n){let r=e.minus(t),o=n.minus(t);r.length()<i&&(r=o.randomNonParallelVector()),o.length()<i&&(o=r.randomNonParallelVector());let s=r.cross(o);return s.length()<i&&(o=r.randomNonParallelVector(),s=r.cross(o)),s=s.unit(),new l(s,s.dot(t))},l.fromPoints=function(t,e,n){return t=new r(t),e=new r(e),n=new r(n),l.fromVector3Ds(t,e,n)},l.fromNormalAndPoint=function(t,e){t=new r(t),e=new r(e),t=t.unit();let n=e.dot(t);return new l(t,n)},l.prototype={flipped:function(){return new l(this.normal.negated(),-this.w)},getTag:function(){let t=this.tag;return t||(t=s(),this.tag=t),t},equals:function(t){return this.normal.equals(t.normal)&&this.w===t.w},transform:function(t){let e=t.isMirroring(),n=this.normal.randomNonParallelVector(),r=this.normal.cross(n),o=this.normal.cross(r),i=this.normal.times(this.w),s=i.plus(r),a=i.plus(o);i=i.multiply4x4(t),s=s.multiply4x4(t),a=a.multiply4x4(t);let u=l.fromVector3Ds(i,s,a);return e&&(u=u.flipped()),u},splitLineBetweenPoints:function(t,e){let n=e.minus(t),r=(this.w-this.normal.dot(t))/this.normal.dot(n);return isNaN(r)&&(r=0),r>1&&(r=1),r<0&&(r=0),t.plus(n.times(r))},intersectWithLine:function(t){return t.intersectWithPlane(this)},intersectWithPlane:function(t){return o.fromPlanes(this,t)},signedDistanceToPoint:function(t){return this.normal.dot(t)-this.w},toString:function(){return"[normal: "+this.normal.toString()+", w: "+this.w+"]"},mirrorPoint:function(t){let e=this.signedDistanceToPoint(t);return t.minus(this.normal.times(2*e))}},t.exports=l},function(t,e,n){const r=n(1),o=n(2),{getTag:i}=n(0),s=function(t){this.pos=t,this.uv=new o(0,0)};s.fromObject=function(t){var e=new r(t.pos);return new s(e)},s.fromPosAndUV=function(t,e){var n=new s(t);return n.uv=e,n},s.prototype={flipped:function(){return this},getTag:function(){var t=this.tag;return t||(t=i(),this.tag=t),t},interpolate:function(t,e){var n=this.pos.lerp(t.pos,e),r=this.uv.lerp(t.uv,e);return s.fromPosAndUV(n,r)},transform:function(t){var e=this.pos.multiply4x4(t);return s.fromPosAndUV(e,this.uv)},toString:function(){return this.pos.toString()}},t.exports=s},function(t,e){t.exports={fnNumberSort:function(t,e){return t-e},fnSortByIndex:function(t,e){return t.index-e.index},IsFloat:function(t){return!isNaN(t)||t===1/0||t===-1/0},solve2Linear:function(t,e,n,r,o,i){let s=1/(t*r-e*n),l=o*r-e*i,a=-o*n+t*i;return l*=s,a*=s,[l,a]},insertSorted:function(t,e,n){let r=0,o=t.length;for(;o>r;){let i=Math.floor((r+o)/2);n(e,t[i])>0?r=i+1:o=i}t.splice(r,0,e)},interpolateBetween2DPointsForY:function(t,e,n){let r,o=n-t.y,i=e.y-t.y;return i<0&&(o=-o,i=-i),r=o<=0?0:o>=i?1:i<1e-10?.5:o/i,t.x+r*(e.x-t.x)},isCAG:function(t){return"sides"in t&&"length"in t.sides},isCSG:function(t){return"polygons"in t&&"length"in t.polygons}}},function(t,e,n){const r=n(1),o=n(5),i=n(4),s=n(24),l=n(3),a=function(t){let e=new(n(12));return e.polygons=t,e.isCanonicalized=!1,e.isRetesselated=!1,e};t.exports={fromPolygons:a,fromSlices:function(t){return s.createFromPoints([[0,0,0],[1,0,0],[1,1,0],[0,1,0]]).solidFromSlices(t)},fromObject:function(t){let e=t.polygons.map((function(t){return l.fromObject(t)})),n=a(e);return n.isCanonicalized=t.isCanonicalized,n.isRetesselated=t.isRetesselated,n},fromCompactBinary:function(t){if("CSG"!==t.class)throw new Error("Not a CSG");let e,n,s,u,c,h,f=[],p=t.planeData,d=p.length/4,m=0;for(let t=0;t<d;t++)e=p[m++],n=p[m++],s=p[m++],u=p[m++],c=r.Create(e,n,s),h=new i(c,u),f.push(h);let g=[];const y=t.vertexData,w=y.length/3;let x,v;m=0;for(let t=0;t<w;t++)e=y[m++],n=y[m++],s=y[m++],x=r.Create(e,n,s),v=new o(x),g.push(v);let b,P,_,C,M=t.shared.map((function(t){return l.Shared.fromObject(t)})),T=[],S=t.numPolygons,A=t.numVerticesPerPolygon,z=t.polygonVertices,E=t.polygonPlaneIndexes,O=t.polygonSharedIndexes;m=0;for(let t=0;t<S;t++){b=A[t],P=[];for(let t=0;t<b;t++)P.push(g[z[m++]]);h=f[E[t]],_=M[O[t]],C=new l(P,_,h),T.push(C)}let k=a(T);return k.isCanonicalized=!0,k.isRetesselated=!0,k}}},function(t,e,n){const r=n(17),o=n(2),i=n(14),{areaEPS:s}=n(0),{isSelfIntersecting:l,contains:a}=n(25),{union:u,difference:c}=n(18),h=function(t){let e=new(n(9));return e.sides=t,e},f=function(t){if(!t)throw new Error("points parameter must be defined");if(!Array.isArray(t))throw new Error("points parameter must be an array");if(void 0!==t[0].x||"number"==typeof t[0][0])return p(t);if("object"==typeof t[0][0])return d(t);throw new Error("Unsupported points list format")},p=function(t){if(t.length<3)throw new Error("CAG shape needs at least 3 points");let e=[],n=new i(new o(t[t.length-1]));t.map((function(t){let s=new i(new o(t));e.push(new r(n,s)),n=s}));let a=h(e);if(l(a))throw new Error("Polygon is self intersecting!");let u=a.area();if(Math.abs(u)<s)throw new Error("Degenerate polygon!");return u<0&&(a=a.flipped()),a.canonicalized()},d=function(t){if(1===t.length)return f(t[0]);let e=[];t.forEach(t=>{e.push(p(t))});let n={};e.forEach((t,r)=>{e.forEach((e,o)=>{t!==e&&(n[r]||(n[r]={parents:[],isHole:!1}),n[o]||(n[o]={parents:[],isHole:!1}),a(e,t)&&(n[r].parents.push(o),n[r].isHole=!!(n[r].parents.length%2),n[o].isHole=!!(n[o].parents.length%2)))})});let r=null;for(key in n)r=n[key],r.isHole&&(delete n[key],r.parents.forEach(t=>{e[t]=c(e[t],e[key])}));let o=h([]);for(key in n)o=u(o,e[key]);return o};t.exports={fromSides:h,fromObject:function(t){let e=t.sides.map((function(t){return r.fromObject(t)})),n=h(e);return n.isCanonicalized=t.isCanonicalized,n},fromPoints:f,fromPointsNoCheck:function(t){let e=[],n=new o(t[t.length-1]),s=new i(n);return t.map((function(t){let n=new o(t),l=new i(n),a=new r(s,l);e.push(a),s=l})),h(e)},fromPath2:function(t){if(!t.isClosed())throw new Error("The path should be closed!");return f(t.getPoints())},fromFakeCSG:function(t){let e=t.polygons.map((function(t){return r._fromFakePolygon(t)})).filter((function(t){return null!==t}));return h(e)},fromCompactBinary:function(t){if("CAG"!==t.class)throw new Error("Not a CAG");let e=[],n=t.vertexData,s=n.length/2,l=0;for(let t=0;t<s;t++){let t=n[l++],r=n[l++],s=new o(t,r),a=new i(s);e.push(a)}let a=[],u=t.sideVertexIndices.length/2;l=0;for(let n=0;n<u;n++){let n=t.sideVertexIndices[l++],o=t.sideVertexIndices[l++],i=new r(e[n],e[o]);a.push(i)}let c=h(a);return c.isCanonicalized=!0,c}}},function(t,e,n){const{Connector:r}=n(13),o=n(5),i=n(2),s=n(1),l=n(3),{fromPolygons:a}=n(7),{fromSides:u,fromFakeCSG:c}=n(8),h=n(26),f=n(29),{isCAGValid:p,isSelfIntersecting:d,hasPointInside:m}=n(25),{area:g,getBounds:y}=n(44),{overCutInsideCorners:w}=n(30),{extrudeInOrthonormalBasis:x,extrudeInPlane:v,extrude:b,rotateExtrude:P}=n(22),_=n(46),C=n(31),{expand:M,contract:T,expandedShellOfCAG:S}=n(32);let A=function(){this.sides=[],this.isCanonicalized=!1};A.prototype={union:function(t){let e;e=t instanceof Array?t:[t];let n=this._toCSGWall(-1,1);return n=n.union(e.map((function(t){return t._toCSGWall(-1,1).reTesselated()})),!1,!1),c(n).canonicalized()},subtract:function(t){let e;e=t instanceof Array?t:[t];let n=this._toCSGWall(-1,1);return e.map((function(t){n=n.subtractSub(t._toCSGWall(-1,1),!1,!1)})),n=n.reTesselated(),n=n.canonicalized(),n=c(n),n=n.canonicalized(),n},intersect:function(t){let e;e=t instanceof Array?t:[t];let n=this._toCSGWall(-1,1);return e.map((function(t){n=n.intersectSub(t._toCSGWall(-1,1),!1,!1)})),n=n.reTesselated(),n=n.canonicalized(),n=c(n),n=n.canonicalized(),n},transform:function(t){let e=t.isMirroring(),n=this.sides.map((function(e){return e.transform(t)})),r=u(n);return e&&(r=r.flipped()),r},flipped:function(){let t=this.sides.map((function(t){return t.flipped()}));return t.reverse(),u(t)},center:function(t){return C({axes:t},[this])},expandedShell:function(t,e){return S(this,t,e)},expand:function(t,e){return M(this,t,e)},contract:function(t,e){return T(this,t,e)},area:function(){return g(this)},getBounds:function(){return y(this)},isSelfIntersecting:function(t){return d(this,t)},extrudeInOrthonormalBasis:function(t,e,n){return x(this,t,e,n)},extrudeInPlane:function(t,e,n,r){return v(this,t,e,n,r)},extrude:function(t){return b(this,t)},rotateExtrude:function(t){return P(this,t)},check:function(){return p(this)},canonicalized:function(){return h(this)},reTesselated:function(){return f(this)},getOutlinePaths:function(){return _(this)},overCutInsideCorners:function(t){return w(this,t)},hasPointInside:function(t){return m(this,t)},toString:function(){let t="CAG ("+this.sides.length+" sides):\n";return this.sides.map((function(e){t+="  "+e.toString()+"\n"})),t},_toCSGWall:function(t,e){let n=this.sides.map((function(n){return n.toPolygon3D(t,e)}));return a(n)},_toVector3DPairs:function(t){let e=this.sides.map((function(t){let e=t.vertex0.pos,n=t.vertex1.pos;return[s.Create(e.x,e.y,0),s.Create(n.x,n.y,0)]}));return void 0!==t&&(e=e.map((function(e){return e.map((function(e){return e.transform(t)}))}))),e},_toPlanePolygons:function(t){t=Object.assign({},{flipped:!1},t);let{flipped:e}=t,n=[0,0,0],u=[0,0,1],c=[0,1,0],h=new r(n,u,c),f=t.translation||n,p=t.axisVector||u,d=t.normalVector||c,m=t.toConnector||new r(f,p,d),g=h.getTransformationTo(m,!1,0),y=this.getBounds();y[0]=y[0].minus(new i(1,1)),y[1]=y[1].plus(new i(1,1));let w=this._toCSGWall(-1,1),x=a([new l([new o(new s(y[0].x,y[0].y,0)),new o(new s(y[1].x,y[0].y,0)),new o(new s(y[1].x,y[1].y,0)),new o(new s(y[0].x,y[1].y,0))])]);e&&(x=x.invert()),x=x.intersectSub(w);let v=x.polygons.filter((function(t){return Math.abs(t.plane.normal.z)>.99}));return v.forEach((function(t){t.vertices.forEach((function(t){t.uv=new i(t.pos.x,t.pos.y)}))})),v.map((function(t){return t.transform(g)}))},_toWallPolygons:function(t,e=0){let n=new r([0,0,0],[0,0,1],[0,1,0]),s=t.toConnector1,a=t.toConnector2;if(!(s instanceof r&&a instanceof r))throw new Error("could not parse Connector arguments toConnector1 or toConnector2");if(t.cag&&t.cag.sides.length!==this.sides.length)throw new Error("target cag needs same sides count as start cag");let u=t.cag||this,c=n.getTransformationTo(s,s.axisvector.z<0,0),h=n.getTransformationTo(a,a.axisvector.z<0,0),f=this._toVector3DPairs(c),p=u._toVector3DPairs(h),d=s.axisvector.z<0,m=[],g=[],y=[f[0]],w=[p[0]],x=0;for(x=1;x<f.length;++x)f[x][1].equals(f[x-1][0])||f[x][0].equals(f[x-1][1])||(m.push(y),y=[],g.push(w),w=[]),y.push(f[x]),w.push(p[x]);m.push(y),g.push(w);let v=[];return m.forEach((function(t,n){let r=0,s=0;p=g[n],t.forEach((function(t,n){let a=r+t[0].distanceTo(t[1]),u=s+p[n][0].distanceTo(p[n][1]),c=t[0].distanceTo(p[n][0]),h=t[1].distanceTo(p[n][1]),f=new l([o.fromPosAndUV(p[n][1],new i(u,h*(1+e))),o.fromPosAndUV(p[n][0],new i(s,c*(1+e))),o.fromPosAndUV(t[0],new i(r,c*e))]),m=new l([o.fromPosAndUV(p[n][1],new i(u,h*(1+e))),o.fromPosAndUV(t[0],new i(r,c*e)),o.fromPosAndUV(t[1],new i(a,h*e))]);d&&(f.plane=f.plane.flipped(),m.plane=m.plane.flipped()),v.push(f),v.push(m),r=a,s=u}))})),v},toPoints:function(){let t=this.sides.map((function(t){return t.vertex0.pos}));return t.length>0&&t.push(t.shift()),t},toCompactBinary:function(){let t=this.canonicalized(),e=t.sides.length,n={},r=[],o=0,i=new Uint32Array(2*e),s=0;t.sides.map((function(t){[t.vertex0,t.vertex1].map((function(t){let e,l=t.getTag();l in n?e=n[l]:(e=o++,n[l]=e,r.push(t)),i[s++]=e}))}));let l=new Float64Array(2*o),a=0;return r.map((function(t){let e=t.pos;l[a++]=e._x,l[a++]=e._y})),{class:"CAG",sideVertexIndices:i,vertexData:l}}},t.exports=A},function(t,e,n){const r=n(1),o=n(2),i=n(11),s=n(4),l=function(t){arguments.length>=1?this.elements=t:this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]};l.prototype={plus:function(t){for(var e=[],n=0;n<16;n++)e[n]=this.elements[n]+t.elements[n];return new l(e)},minus:function(t){for(var e=[],n=0;n<16;n++)e[n]=this.elements[n]-t.elements[n];return new l(e)},multiply:function(t){var e=this.elements[0],n=this.elements[1],r=this.elements[2],o=this.elements[3],i=this.elements[4],s=this.elements[5],a=this.elements[6],u=this.elements[7],c=this.elements[8],h=this.elements[9],f=this.elements[10],p=this.elements[11],d=this.elements[12],m=this.elements[13],g=this.elements[14],y=this.elements[15],w=t.elements[0],x=t.elements[1],v=t.elements[2],b=t.elements[3],P=t.elements[4],_=t.elements[5],C=t.elements[6],M=t.elements[7],T=t.elements[8],S=t.elements[9],A=t.elements[10],z=t.elements[11],E=t.elements[12],O=t.elements[13],k=t.elements[14],D=t.elements[15],V=[];return V[0]=e*w+n*P+r*T+o*E,V[1]=e*x+n*_+r*S+o*O,V[2]=e*v+n*C+r*A+o*k,V[3]=e*b+n*M+r*z+o*D,V[4]=i*w+s*P+a*T+u*E,V[5]=i*x+s*_+a*S+u*O,V[6]=i*v+s*C+a*A+u*k,V[7]=i*b+s*M+a*z+u*D,V[8]=c*w+h*P+f*T+p*E,V[9]=c*x+h*_+f*S+p*O,V[10]=c*v+h*C+f*A+p*k,V[11]=c*b+h*M+f*z+p*D,V[12]=d*w+m*P+g*T+y*E,V[13]=d*x+m*_+g*S+y*O,V[14]=d*v+m*C+g*A+y*k,V[15]=d*b+m*M+g*z+y*D,new l(V)},clone:function(){var t=this.elements.map((function(t){return t}));return new l(t)},rightMultiply1x3Vector:function(t){var e=t._x,n=t._y,o=t._z,i=e*this.elements[0]+n*this.elements[1]+o*this.elements[2]+1*this.elements[3],s=e*this.elements[4]+n*this.elements[5]+o*this.elements[6]+1*this.elements[7],l=e*this.elements[8]+n*this.elements[9]+o*this.elements[10]+1*this.elements[11],a=e*this.elements[12]+n*this.elements[13]+o*this.elements[14]+1*this.elements[15];if(1!==a){var u=1/a;i*=u,s*=u,l*=u}return new r(i,s,l)},leftMultiply1x3Vector:function(t){var e=t._x,n=t._y,o=t._z,i=e*this.elements[0]+n*this.elements[4]+o*this.elements[8]+1*this.elements[12],s=e*this.elements[1]+n*this.elements[5]+o*this.elements[9]+1*this.elements[13],l=e*this.elements[2]+n*this.elements[6]+o*this.elements[10]+1*this.elements[14],a=e*this.elements[3]+n*this.elements[7]+o*this.elements[11]+1*this.elements[15];if(1!==a){var u=1/a;i*=u,s*=u,l*=u}return new r(i,s,l)},rightMultiply1x2Vector:function(t){var e=t.x,n=t.y,r=e*this.elements[0]+n*this.elements[1]+0*this.elements[2]+1*this.elements[3],i=e*this.elements[4]+n*this.elements[5]+0*this.elements[6]+1*this.elements[7],s=(this.elements[8],this.elements[9],this.elements[10],this.elements[11],e*this.elements[12]+n*this.elements[13]+0*this.elements[14]+1*this.elements[15]);if(1!==s){var l=1/s;r*=l,i*=l,l}return new o(r,i)},leftMultiply1x2Vector:function(t){var e=t.x,n=t.y,r=e*this.elements[0]+n*this.elements[4]+0*this.elements[8]+1*this.elements[12],i=e*this.elements[1]+n*this.elements[5]+0*this.elements[9]+1*this.elements[13],s=(this.elements[2],this.elements[6],this.elements[10],this.elements[14],e*this.elements[3]+n*this.elements[7]+0*this.elements[11]+1*this.elements[15]);if(1!==s){var l=1/s;r*=l,i*=l,l}return new o(r,i)},isMirroring:function(){var t=new r(this.elements[0],this.elements[4],this.elements[8]),e=new r(this.elements[1],this.elements[5],this.elements[9]),n=new r(this.elements[2],this.elements[6],this.elements[10]);return t.cross(e).dot(n)<0}},l.unity=function(){return new l},l.rotationX=function(t){var e=t*Math.PI*(1/180),n=Math.cos(e),r=Math.sin(e);return new l([1,0,0,0,0,n,r,0,0,-r,n,0,0,0,0,1])},l.rotationY=function(t){var e=t*Math.PI*(1/180),n=Math.cos(e),r=Math.sin(e);return new l([n,0,-r,0,0,1,0,0,r,0,n,0,0,0,0,1])},l.rotationZ=function(t){var e=t*Math.PI*(1/180),n=Math.cos(e),r=Math.sin(e);return new l([n,r,0,0,-r,n,0,0,0,0,1,0,0,0,0,1])},l.rotation=function(t,e,n){t=new r(t),e=new r(e);var o=s.fromNormalAndPoint(e,t),a=new i(o),u=l.translation(t.negated());return u=(u=(u=(u=u.multiply(a.getProjectionMatrix())).multiply(l.rotationZ(n))).multiply(a.getInverseProjectionMatrix())).multiply(l.translation(t))},l.translation=function(t){var e=new r(t),n=[1,0,0,0,0,1,0,0,0,0,1,0,e.x,e.y,e.z,1];return new l(n)},l.mirroring=function(t){var e=t.normal.x,n=t.normal.y,r=t.normal.z,o=t.w;return new l([1-2*e*e,-2*n*e,-2*r*e,0,-2*e*n,1-2*n*n,-2*r*n,0,-2*e*r,-2*n*r,1-2*r*r,0,2*e*o,2*n*o,2*r*o,1])},l.scaling=function(t){var e=new r(t),n=[e.x,0,0,0,0,e.y,0,0,0,0,e.z,0,0,0,0,1];return new l(n)},t.exports=l},function(t,e,n){const r=n(2),o=n(1),i=n(21),s=n(16),l=n(4),a=function(t,e){e=arguments.length<2?t.normal.randomNonParallelVector():new o(e),this.v=t.normal.cross(e).unit(),this.u=this.v.cross(t.normal),this.plane=t,this.planeorigin=t.normal.times(t.w)};a.GetCartesian=function(t,e){let n,r,i=t+"/"+e;if("X/Y"===i)n=[0,0,1],r=[1,0,0];else if("Y/-X"===i)n=[0,0,1],r=[0,1,0];else if("-X/-Y"===i)n=[0,0,1],r=[-1,0,0];else if("-Y/X"===i)n=[0,0,1],r=[0,-1,0];else if("-X/Y"===i)n=[0,0,-1],r=[-1,0,0];else if("-Y/-X"===i)n=[0,0,-1],r=[0,-1,0];else if("X/-Y"===i)n=[0,0,-1],r=[1,0,0];else if("Y/X"===i)n=[0,0,-1],r=[0,1,0];else if("X/Z"===i)n=[0,-1,0],r=[1,0,0];else if("Z/-X"===i)n=[0,-1,0],r=[0,0,1];else if("-X/-Z"===i)n=[0,-1,0],r=[-1,0,0];else if("-Z/X"===i)n=[0,-1,0],r=[0,0,-1];else if("-X/Z"===i)n=[0,1,0],r=[-1,0,0];else if("-Z/-X"===i)n=[0,1,0],r=[0,0,-1];else if("X/-Z"===i)n=[0,1,0],r=[1,0,0];else if("Z/X"===i)n=[0,1,0],r=[0,0,1];else if("Y/Z"===i)n=[1,0,0],r=[0,1,0];else if("Z/-Y"===i)n=[1,0,0],r=[0,0,1];else if("-Y/-Z"===i)n=[1,0,0],r=[0,-1,0];else if("-Z/Y"===i)n=[1,0,0],r=[0,0,-1];else if("-Y/Z"===i)n=[-1,0,0],r=[0,-1,0];else if("-Z/-Y"===i)n=[-1,0,0],r=[0,0,-1];else if("Y/-Z"===i)n=[-1,0,0],r=[0,1,0];else{if("Z/Y"!==i)throw new Error("OrthoNormalBasis.GetCartesian: invalid combination of axis identifiers. Should pass two string arguments from [X,Y,Z,-X,-Y,-Z], being two different axes.");n=[-1,0,0],r=[0,0,1]}return new a(new l(new o(n),0),new o(r))},a.Z0Plane=function(){let t=new l(new o([0,0,1]),0);return new a(t,new o([1,0,0]))},a.prototype={getProjectionMatrix:function(){return new(n(10))([this.u.x,this.v.x,this.plane.normal.x,0,this.u.y,this.v.y,this.plane.normal.y,0,this.u.z,this.v.z,this.plane.normal.z,0,0,0,-this.plane.w,1])},getInverseProjectionMatrix:function(){const t=n(10);let e=this.plane.normal.times(this.plane.w);return new t([this.u.x,this.u.y,this.u.z,0,this.v.x,this.v.y,this.v.z,0,this.plane.normal.x,this.plane.normal.y,this.plane.normal.z,0,e.x,e.y,e.z,1])},to2D:function(t){return new r(t.dot(this.u),t.dot(this.v))},to3D:function(t){return this.planeorigin.plus(this.u.times(t.x)).plus(this.v.times(t.y))},line3Dto2D:function(t){let e=t.point,n=t.direction.plus(e),r=this.to2D(e),o=this.to2D(n);return i.fromPoints(r,o)},line2Dto3D:function(t){let e=t.origin(),n=t.direction().plus(e),r=this.to3D(e),o=this.to3D(n);return s.fromPoints(r,o)},transform:function(t){let e=this.plane.transform(t),n=this.u.transform(t),r=new o(0,0,0).transform(t),i=n.minus(r);return new a(e,i)}},t.exports=a},function(t,e,n){const r=n(40),o=n(3),i=n(4),s=n(11),l=(n(9),n(23)),{fromPolygons:a}=n(7),u=n(49),c=n(26),h=n(29),{bounds:f}=n(50),{projectToOrthoNormalBasis:p}=n(51),{lieFlat:d,getTransformationToFlatLying:m,getTransformationAndInverseTransformationToFlatLying:g}=n(30),{sectionCut:y,cutByPlane:w}=n(52),x=n(31),{expand:v,contract:b,expandedShellOfCCSG:P}=n(32);let _=function(){this.polygons=[],this.properties=new l,this.isCanonicalized=!0,this.isRetesselated=!0};_.prototype={union:function(t){let e,n;for(t instanceof Array?(e=t.slice(0),e.push(this)):e=[this,t],n=1;n<e.length;n+=2)e.push(e[n-1].unionSub(e[n]));return e[n-1].reTesselated().canonicalized()},unionSub:function(t,e,n){if(this.mayOverlap(t)){let o=new r(this.polygons),i=new r(t.polygons);o.clipTo(i,!1),i.clipTo(o),i.invert(),i.clipTo(o),i.invert();let s=o.allPolygons().concat(i.allPolygons()),l=a(s);return l.properties=this.properties._merge(t.properties),e&&(l=l.reTesselated()),n&&(l=l.canonicalized()),l}return this.unionForNonIntersecting(t)},unionForNonIntersecting:function(t){let e=this.polygons.concat(t.polygons),n=a(e);return n.properties=this.properties._merge(t.properties),n.isCanonicalized=this.isCanonicalized&&t.isCanonicalized,n.isRetesselated=this.isRetesselated&&t.isRetesselated,n},subtract:function(t){let e;e=t instanceof Array?t:[t];let n=this;for(let t=0;t<e.length;t++){let r=t===e.length-1;n=n.subtractSub(e[t],r,r)}return n},subtractSub:function(t,e,n){let o=new r(this.polygons),i=new r(t.polygons);o.invert(),o.clipTo(i),i.clipTo(o,!0),o.addPolygons(i.allPolygons()),o.invert();let s=a(o.allPolygons());return s.properties=this.properties._merge(t.properties),e&&(s=s.reTesselated()),n&&(s=s.canonicalized()),s},intersect:function(t){let e;e=t instanceof Array?t:[t];let n=this;for(let t=0;t<e.length;t++){let r=t===e.length-1;n=n.intersectSub(e[t],r,r)}return n},intersectSub:function(t,e,n){let o=new r(this.polygons),i=new r(t.polygons);o.invert(),i.clipTo(o),i.invert(),o.clipTo(i),i.clipTo(o),o.addPolygons(i.allPolygons()),o.invert();let s=a(o.allPolygons());return s.properties=this.properties._merge(t.properties),e&&(s=s.reTesselated()),n&&(s=s.canonicalized()),s},invert:function(){let t=this.polygons.map((function(t){return t.flipped()}));return a(t)},transform1:function(t){let e=this.polygons.map((function(e){return e.transform(t)})),n=a(e);return n.properties=this.properties._transform(t),n.isRetesselated=this.isRetesselated,n},transform:function(t){let e=t.isMirroring(),n={},r={},i=this.polygons.map((function(i){let s,l=i.plane,a=l.getTag();a in r?s=r[a]:(s=l.transform(t),r[a]=s);let u=i.vertices.map((function(e){let r,o=e.getTag();return o in n?r=n[o]:(r=e.transform(t),n[o]=r),r}));return e&&u.reverse(),new o(u,i.shared,s)})),s=a(i);return s.properties=this.properties._transform(t),s.isRetesselated=this.isRetesselated,s.isCanonicalized=this.isCanonicalized,s},center:function(t){return x({axes:t},[this])},expand:function(t,e){return v(this,t,e)},contract:function(t,e){return b(this,t,e)},expandedShell:function(t,e,n){return P(this,t,e,n)},stretchAtPlane:function(t,e,n){let r=i.fromNormalAndPoint(t,e),o=new s(r),l=this.sectionCut(o).extrudeInOrthonormalBasis(o,n),a=this.cutByPlane(r),u=this.cutByPlane(r.flipped());return a.union([l,u.translate(r.normal.times(n))])},canonicalized:function(){return c(this)},reTesselated:function(){return h(this)},fixTJunctions:function(){return u(a,this)},getBounds:function(){return f(this)},mayOverlap:function(t){if(0===this.polygons.length||0===t.polygons.length)return!1;{let e=f(this),n=f(t);return!(e[1].x<n[0].x)&&(!(e[0].x>n[1].x)&&(!(e[1].y<n[0].y)&&(!(e[0].y>n[1].y)&&(!(e[1].z<n[0].z)&&!(e[0].z>n[1].z)))))}},cutByPlane:function(t){return w(this,t)},connectTo:function(t,e,n,r){let o=t.getTransformationTo(e,n,r);return this.transform(o)},setShared:function(t){let e=this.polygons.map((function(e){return new o(e.vertices,t,e.plane)})),n=a(e);return n.properties=this.properties,n.isRetesselated=this.isRetesselated,n.isCanonicalized=this.isCanonicalized,n},setColor:function(t){let e=o.Shared.fromColor.apply(this,arguments);return this.setShared(e)},getTransformationAndInverseTransformationToFlatLying:function(){return g(this)},getTransformationToFlatLying:function(){return m(this)},lieFlat:function(){return d(this)},projectToOrthoNormalBasis:function(t){return p(this,t)},sectionCut:function(t){return y(this,t)},getFeatures:function(t){t instanceof Array||(t=[t]);let e=this.toTriangles().map((function(e){return e.getTetraFeatures(t)})).reduce((function(t,e){return e.map((function(e,n){return e+(0===t?0:t[n])}))}),0);return 1===e.length?e[0]:e},toPolygons:function(){return this.polygons},toString:function(){let t="CSG solid:\n";return this.polygons.map((function(e){t+=e.toString()})),t},toCompactBinary:function(){let t=this.canonicalized(),e=t.polygons.length,n=0,r=0,o={},i=[],s=0,l={},a=[],u=[],c={},h=0;t.polygons.map((function(t){t.vertices.map((function(t){++n;let e=t.getTag();e in o||(o[e]=r++,i.push(t))}));let e=t.plane.getTag();e in l||(l[e]=s++,a.push(t.plane));let f=t.shared.getTag();f in c||(c[f]=h++,u.push(t.shared))}));let f=new Uint32Array(e),p=new Uint32Array(e),d=new Uint32Array(n),m=new Uint32Array(e),g=new Float64Array(3*r),y=new Float64Array(4*s),w=0;for(let n=0;n<e;++n){let e=t.polygons[n];f[n]=e.vertices.length,e.vertices.map((function(t){let e=t.getTag(),n=o[e];d[w++]=n}));let r=e.plane.getTag(),i=l[r];m[n]=i;let s=e.shared.getTag(),a=c[s];p[n]=a}let x=0;i.map((function(t){const e=t.pos;g[x++]=e._x,g[x++]=e._y,g[x++]=e._z}));let v=0;return a.map((function(t){const e=t.normal;y[v++]=e._x,y[v++]=e._y,y[v++]=e._z,y[v++]=t.w})),{class:"CSG",numPolygons:e,numVerticesPerPolygon:f,polygonPlaneIndexes:m,polygonSharedIndexes:p,polygonVertices:d,vertexData:g,planeData:y,shared:u}},toTriangles:function(){let t=[];return this.polygons.forEach((function(e){let n=e.vertices[0];for(let r=e.vertices.length-3;r>=0;r--)t.push(new o([n,e.vertices[r+1],e.vertices[r+2]],e.shared,e.plane))})),t}},t.exports=_},function(t,e,n){const r=n(1),o=n(16),i=n(10),s=n(11),l=n(4),a=function(t,e,n){this.point=new r(t),this.axisvector=new r(e).unit(),this.normalvector=new r(n).unit()};a.prototype={normalized:function(){let t=this.axisvector.unit(),e=this.normalvector.cross(t).unit(),n=t.cross(e);return new a(this.point,t,n)},transform:function(t){let e=this.point.multiply4x4(t),n=this.point.plus(this.axisvector).multiply4x4(t).minus(e),r=this.point.plus(this.normalvector).multiply4x4(t).minus(e);return new a(e,n,r)},getTransformationTo:function(t,e,n){e=!!e,n=n?Number(n):0;let o=this.normalized();t=t.normalized();let a=i.translation(this.point.negated()),u=l.anyPlaneFromVector3Ds(new r(0,0,0),o.axisvector,t.axisvector),c=new s(u),h=c.to2D(o.axisvector).angle(),f=c.to2D(t.axisvector).angle(),p=180*(f-h)/Math.PI;e&&(p+=180),a=a.multiply(c.getProjectionMatrix()),a=a.multiply(i.rotationZ(p)),a=a.multiply(c.getInverseProjectionMatrix());let d=o.transform(a),m=l.fromNormalAndPoint(t.axisvector,new r(0,0,0)),g=new s(m);return h=g.to2D(d.normalvector).angle(),f=g.to2D(t.normalvector).angle(),p=180*(f-h)/Math.PI,p+=n,a=a.multiply(g.getProjectionMatrix()),a=a.multiply(i.rotationZ(p)),a=a.multiply(g.getInverseProjectionMatrix()),a=a.multiply(i.translation(t.point)),a},axisLine:function(){return new o(this.point,this.axisvector)},extend:function(t){let e=this.point.plus(this.axisvector.unit().times(t));return new a(e,this.axisvector,this.normalvector)}};const u=function(t){this.connectors_=t?t.slice():[]};u.defaultNormal=[0,0,1],u.fromPath2D=function(t,e,n){if(3===arguments.length)return u._fromPath2DTangents(t,e,n);if(2===arguments.length)return u._fromPath2DExplicit(t,e);throw new Error("call with path2D and either 2 direction vectors, or a function returning direction vectors")},u._fromPath2DTangents=function(t,e,n){let r,o=t.points.length,i=new u([new a(t.points[0],e,u.defaultNormal)]);return t.points.slice(1,o-1).forEach((function(e,n){r=t.points[n+2].minus(t.points[n]).toVector3D(0),i.appendConnector(new a(e.toVector3D(0),r,u.defaultNormal))}),this),i.appendConnector(new a(t.points[o-1],n,u.defaultNormal)),i.closed=t.closed,i},u._fromPath2DExplicit=function(t,e){let n=new u(t.points.map((function(t,n){return new a(t.toVector3D(0),r.Create(1,0,0).rotateZ(function(t,e,n){return"function"==typeof t&&(t=t(e,n)),t}(e,t,n)),u.defaultNormal)}),this));return n.closed=t.closed,n},u.prototype={setClosed:function(t){this.closed=!!t},appendConnector:function(t){this.connectors_.push(t)},followWith:function(t){const e=n(12);function r(t,e){return"function"==typeof t&&(t=t(e.point,e.axisvector,e.normalvector)),t}this.verify();let o,i=[],s=this.connectors_[this.connectors_.length-1],l=r(t,s);return this.connectors_.forEach((function(e,n){o=r(t,e),n||this.closed?i.push.apply(i,l._toWallPolygons({toConnector1:s,toConnector2:e,cag:o})):i.push.apply(i,o._toPlanePolygons({toConnector:e,flipped:!0})),n!==this.connectors_.length-1||this.closed||i.push.apply(i,o._toPlanePolygons({toConnector:e})),l=o,s=e}),this),e.fromPolygons(i).reTesselated().canonicalized()},verify:function(){let t,e;for(let n=0;n<this.connectors_.length-1;n++){if(t=this.connectors_[n],e=this.connectors_[n+1],e.point.minus(t.point).dot(t.axisvector)<=0)throw new Error("Invalid ConnectorList. Each connectors position needs to be within a <90deg range of previous connectors axisvector");if(t.axisvector.dot(e.axisvector)<=0)throw new Error("invalid ConnectorList. No neighboring connectors axisvectors may span a >=90deg angle")}}},t.exports={Connector:a,ConnectorList:u}},function(t,e,n){const r=n(2),{getTag:o}=n(0),i=function(t){this.pos=t};i.fromObject=function(t){return new i(new r(t.pos._x,t.pos._y))},i.prototype={toString:function(){return"("+this.pos.x.toFixed(5)+","+this.pos.y.toFixed(5)+")"},getTag:function(){var t=this.tag;return t||(t=o(),this.tag=t),t}},t.exports=i},function(t,e,n){const r=n(1),o=n(2),i=function(t,e,n){var r=n;return t&&e in t&&(r=t[e]),r};t.exports={parseOption:i,parseOptionAsInt:function(t,e,n){var r=i(t,e,n);if(r=Number(Math.floor(r)),isNaN(r))throw new Error("Parameter "+e+" should be a number");return r},parseOptionAsFloat:function(t,e,n){var r=i(t,e,n);if("string"==typeof r&&(r=Number(r)),isNaN(r)||"number"!=typeof r)throw new Error("Parameter "+e+" should be a number");return r},parseOptionAsBool:function(t,e,n){var r=i(t,e,n);return"string"==typeof r&&("true"===r?r=!0:("false"===r||0===r)&&(r=!1)),r=!!r},parseOptionAs3DVector:function(t,e,n){var o=i(t,e,n);return o=new r(o)},parseOptionAs2DVector:function(t,e,n){var r=i(t,e,n);return r=new o(r)},parseOptionAs3DVectorList:function(t,e,n){return i(t,e,n).map((function(t){return new r(t)}))}}},function(t,e,n){const r=n(1),{EPS:o}=n(0),{solve2Linear:i}=n(6),s=function(t,e){t=new r(t),e=new r(e),this.point=t,this.direction=e.unit()};s.fromPoints=function(t,e){t=new r(t);let n=(e=new r(e)).minus(t);return new s(t,n)},s.fromPlanes=function(t,e){let n=t.normal.cross(e.normal),l=n.length();if(l<o)throw new Error("Parallel planes");n=n.times(1/l);let a,u=Math.abs(n.x),c=Math.abs(n.y),h=Math.abs(n.z);if(u>=c&&u>=h){let n=i(t.normal.y,t.normal.z,e.normal.y,e.normal.z,t.w,e.w);a=new r(0,n[0],n[1])}else if(c>=u&&c>=h){let n=i(t.normal.x,t.normal.z,e.normal.x,e.normal.z,t.w,e.w);a=new r(n[0],0,n[1])}else{let n=i(t.normal.x,t.normal.y,e.normal.x,e.normal.y,t.w,e.w);a=new r(n[0],n[1],0)}return new s(a,n)},s.prototype={intersectWithPlane:function(t){let e=(t.w-t.normal.dot(this.point))/t.normal.dot(this.direction);return this.point.plus(this.direction.times(e))},clone:function(t){return new s(this.point.clone(),this.direction.clone())},reverse:function(){return new s(this.point.clone(),this.direction.negated())},transform:function(t){let e=this.point.multiply4x4(t),n=this.point.plus(this.direction).multiply4x4(t).minus(e);return new s(e,n)},closestPointOnLine:function(t){let e=(t=new r(t)).minus(this.point).dot(this.direction)/this.direction.dot(this.direction);return this.point.plus(this.direction.times(e))},distanceToPoint:function(t){t=new r(t);let e=this.closestPointOnLine(t);return t.minus(e).length()},equals:function(t){if(!this.direction.equals(t.direction))return!1;return!(this.distanceToPoint(t.point)>o)}},t.exports=s},function(t,e,n){const r=n(2),o=n(14),i=n(5),s=n(3),{getTag:l}=n(0),a=function(t,e){if(!(t instanceof o))throw new Error("Assertion failed");if(!(e instanceof o))throw new Error("Assertion failed");this.vertex0=t,this.vertex1=e};a.fromObject=function(t){var e=o.fromObject(t.vertex0),n=o.fromObject(t.vertex1);return new a(e,n)},a._fromFakePolygon=function(t){if(t.vertices.length<4)return null;var e=[],n=t.vertices.filter((function(t,n){return t.pos.z>0&&(e.push(n),!0)})).map((function(t){return new r(t.pos.x,t.pos.y)}));if(2!==n.length)throw new Error("Assertion failed: _fromFakePolygon: not enough points found");var i=e[1]-e[0];if(1!==i&&3!==i)throw new Error("Assertion failed: _fromFakePolygon: unknown index ordering");return 1===i&&n.reverse(),new a(new o(n[0]),new o(n[1]))},a.prototype={toString:function(){return this.vertex0+" -> "+this.vertex1},toPolygon3D:function(t,e){const n=[new i(this.vertex0.pos.toVector3D(t)),new i(this.vertex1.pos.toVector3D(t)),new i(this.vertex1.pos.toVector3D(e)),new i(this.vertex0.pos.toVector3D(e))];return new s(n)},transform:function(t){var e=this.vertex0.pos.transform(t),n=this.vertex1.pos.transform(t);return new a(new o(e),new o(n))},flipped:function(){return new a(this.vertex1,this.vertex0)},direction:function(){return this.vertex1.pos.minus(this.vertex0.pos)},getTag:function(){var t=this.tag;return t||(t=l(),this.tag=t),t},lengthSquared:function(){let t=this.vertex1.pos.x-this.vertex0.pos.x,e=this.vertex1.pos.y-this.vertex0.pos.y;return t*t+e*e},length:function(){return Math.sqrt(this.lengthSquared())}},t.exports=a},function(t,e,n){const{isCAG:r}=n(6);t.exports={union:function(){let t={};const e={extrude2d:!1};let n,o=0,i=arguments;i[0].length&&(i=i[0]),"extrude2d"in i[0]&&(t=Object.assign({},e,i[0]),n=i[o++]),n=i[o++],"object"==typeof i[o]&&r(i[o])&&t.extrude2d&&(n=i[o].extrude({offset:[0,0,.1]}));for(;o<i.length;o++){let e=i[o];"object"==typeof i[o]&&r(i[o])&&t.extrude2d&&(e=i[o].extrude({offset:[0,0,.1]})),n=n.union(e)}return n},difference:function(){let t,e=0,n=arguments;for(n[0].length&&(n=n[0]),t=n[e++];e<n.length;e++)t=r(n[e])?t.subtract(n[e]):t.subtract(n[e].setColor(1,1,0));return t},intersection:function(){let t,e=0,n=arguments;for(n[0].length&&(n=n[0]),t=n[e++];e<n.length;e++)t=r(n[e])?t.intersect(n[e]):t.intersect(n[e].setColor(1,1,0));return t}}},function(t,e,n){const r=n(2),{EPS:o,angleEPS:i}=n(0),{parseOptionAs2DVector:s,parseOptionAsFloat:l,parseOptionAsInt:a,parseOptionAsBool:u}=n(15),{defaultResolution2D:c}=n(0),h=n(14),f=n(17),p=function(t,e){t=t||[];let n=null;(e=!!e)&&t.length>0&&(n=new r(t[t.length-1]));let i=[];t.map((function(t){t=new r(t);let e=!1;if(null!==n){e=t.distanceTo(n)<o}e||i.push(t),n=t})),this.points=i,this.closed=e};p.arc=function(t){let e=s(t,"center",0),n=l(t,"radius",1),o=l(t,"startangle",0),h=l(t,"endangle",360),f=a(t,"resolution",c),d=u(t,"maketangent",!1);for(;h-o>=720;)h-=360;for(;h-o<=-720;)h+=360;let m,g=[],y=Math.abs(h-o);if(y<i)m=r.fromAngle(o/180*Math.PI).times(n),g.push(m.plus(e));else{let t=Math.floor(f*y/360)+1,i=.5*t/y;i>.25&&(i=.25);let s=d?t+2:t;for(let l=0;l<=s;l++){let s=l;d&&(s=(l-1)*(t-2*i)/t+i,s<0&&(s=0),s>t&&(s=t));let a=o+s*(h-o)/t;m=r.fromAngle(a/180*Math.PI).times(n),g.push(m.plus(e))}}return new p(g,!1)},p.prototype={concat:function(t){if(this.closed||t.closed)throw new Error("Paths must not be closed");let e=this.points.concat(t.points);return new p(e)},getPoints:function(){return this.points},appendPoint:function(t){if(this.closed)throw new Error("Path must not be closed");t=new r(t);let e=this.points.concat([t]);return new p(e)},appendPoints:function(t){if(this.closed)throw new Error("Path must not be closed");let e=this.points;return t.forEach((function(t){e.push(new r(t))})),new p(e)},close:function(){return new p(this.points,!0)},isClosed:function(){return this.closed},getTurn:function(){const t=this.points;let e=0,n=t.length-1;for(let r=0;r<t.length;n=r++)e+=t[n].x*t[r].y-t[n].y*t[r].x;return e>0?"clockwise":e<0?"counter-clockwise":"straight"},rectangularExtrude:function(t,e,n){return this.expandToCAG(t/2,n).extrude({offset:[0,0,e]})},expandToCAG:function(t,e){const r=n(9);let o,i=[],s=this.points.length,l=0;this.closed&&s>2&&(l=-1);for(let t=l;t<s;t++){let e=t;e<0&&(e=s-1);let n=this.points[e],r=new h(n);if(t>l){let t=new f(o,r);i.push(t)}o=r}return r.fromSides(i).expandedShell(t,e)},innerToCAG:function(){const t=n(9);if(!this.closed)throw new Error("The path should be closed!");return t.fromPoints(this.points)},transform:function(t){let e=this.points.map((function(e){return e.multiply4x4(t)}));return new p(e,this.closed)},appendBezier:function(t,e){if(arguments.length<2&&(e={}),this.closed)throw new Error("Path must not be closed");if(!(t instanceof Array))throw new Error("appendBezier: should pass an array of control points");if(t.length<1)throw new Error("appendBezier: need at least 1 control point");if(this.points.length<1)throw new Error("appendBezier: path must already contain a point (the endpoint of the path is used as the starting point for the bezier curve)");let n=a(e,"resolution",c);n<4&&(n=4);let o=[],i=[];i.push(this.points[this.points.length-1]);for(let e=0;e<t.length;++e){let n=t[e];if(null===n){if(0!==e)throw new Error("appendBezier: null can only be passed as the first control point");if(t.length<2)throw new Error("appendBezier: null can only be passed if there is at least one more control point");let r;if("lastBezierControlPoint"in this)r=this.lastBezierControlPoint;else{if(this.points.length<2)throw new Error("appendBezier: null is passed as a control point but this requires a previous bezier curve or at least two points in the existing path");r=this.points[this.points.length-2]}n=this.points[this.points.length-1].times(2).minus(r)}else n=new r(n);i.push(n)}let s=i.length-1,l=1;for(let t=0;t<=s;++t)t>0&&(l*=t),o.push(l);let u=[];for(let t=0;t<=s;++t){let e=o[s]/(o[t]*o[s-t]);u.push(e)}let h=function(t){let e=1,n=Math.pow(1-t,s),o=1!==t?1/(1-t):1,l=new r(0,0);for(let r=0;r<=s;++r){r===s&&(n=1);let a=u[r]*e*n;l=l.plus(i[r].times(a)),e*=t,n*=o}return l},f=[],d=[],m=s+1;for(let t=0;t<m;++t){let e=t/(m-1),n=h(e);f.push(n),d.push(e)}let g=1,y=2*Math.PI/n,w=Math.sin(y);for(;g<f.length-1;){let t=f[g].minus(f[g-1]).unit(),e=f[g+1].minus(f[g]).unit(),n=t.cross(e);if(Math.abs(n)>w){let t=d[g-1],e=d[g+1],n=t+1*(e-t)/3,r=t+2*(e-t)/3,o=h(n),i=h(r);f.splice(g,1,o,i),d.splice(g,1,n,r),g--,g<1&&(g=1)}else++g}f=this.points.concat(f.slice(1));let x=new p(f);return x.lastBezierControlPoint=i[i.length-2],x},appendArc:function(t,e){let n=1e5;if(arguments.length<2&&(e={}),this.closed)throw new Error("Path must not be closed");if(this.points.length<1)throw new Error("appendArc: path must already contain a point (the endpoint of the path is used as the starting point for the arc)");let o,i,s=a(e,"resolution",c);if(s<4&&(s=4),"xradius"in e||"yradius"in e){if("radius"in e)throw new Error("Should either give an xradius and yradius parameter, or a radius parameter");o=l(e,"xradius",0),i=l(e,"yradius",0)}else o=l(e,"radius",0),i=o;let h=l(e,"xaxisrotation",0),f=u(e,"clockwise",!1),d=u(e,"large",!1),m=this.points[this.points.length-1];t=new r(t),o=Math.round(o*n)/n,i=Math.round(i*n)/n,t=new r(Math.round(t.x*n)/n,Math.round(t.y*n)/n);let g=!f,y=[];if(0===o||0===i)y.push(t);else{o=Math.abs(o),i=Math.abs(i);let e=h*Math.PI/180,l=Math.cos(e),a=Math.sin(e),u=m.minus(t).times(.5),c=Math.round((l*u.x+a*u.y)*n)/n,f=Math.round((-a*u.x+l*u.y)*n)/n,p=new r(c,f),w=p.x*p.x/(o*o)+p.y*p.y/(i*i);if(w>1){let t=Math.sqrt(w);o*=t,i*=t,o=Math.round(o*n)/n,i=Math.round(i*n)/n}let x=Math.sqrt((o*o*i*i-o*o*p.y*p.y-i*i*p.x*p.x)/(o*o*p.y*p.y+i*i*p.x*p.x));g===d&&(x=-x);let v=new r(o*p.y/i,-i*p.x/o).times(x),b=new r(l*v.x-a*v.y,a*v.x+l*v.y).plus(m.plus(t).times(.5)),P=new r((p.x-v.x)/o,(p.y-v.y)/i),_=new r((-p.x-v.x)/o,(-p.y-v.y)/i),C=P.angleRadians(),M=_.angleRadians()-C;M%=2*Math.PI,!g&&M>0?M-=2*Math.PI:g&&M<0&&(M+=2*Math.PI);let T=Math.ceil(Math.abs(M)/(2*Math.PI)*s)+1;T<1&&(T=1);for(let t=1;t<=T;t++){let e=C+t/T*M,n=Math.cos(e),s=Math.sin(e),u=new r(l*o*n-a*i*s,a*o*n+l*i*s).plus(b);y.push(u)}}y=this.points.concat(y);let w=new p(y);return w}},t.exports=p},function(t,e,n){const{addTransformationMethodsToPrototype:r,addCenteringToPrototype:o}=n(39);let i=n(12),s=n(9);const{_CSGDEBUG:l,defaultResolution2D:a,defaultResolution3D:u,EPS:c,angleEPS:h,areaEPS:f,all:p,top:d,bottom:m,left:g,right:y,front:w,back:x,staticTag:v,getTag:b}=n(0);i._CSGDEBUG=l,i.defaultResolution2D=a,i.defaultResolution3D=u,i.EPS=c,i.angleEPS=h,i.areaEPS=f,i.all=p,i.top=d,i.bottom=m,i.left=g,i.right=y,i.front=w,i.back=x,i.staticTag=v,i.getTag=b,i.Vector2D=n(2),i.Vector3D=n(1),i.Vertex=n(5),s.Vertex=n(14),i.Plane=n(4),i.Polygon=n(3),i.Polygon2D=n(24),i.Line2D=n(21),i.Line3D=n(16),i.Path2D=n(19),i.OrthoNormalBasis=n(11),i.Matrix4x4=n(10),s.Side=n(17),i.Connector=n(13).Connector,i.ConnectorList=n(13).ConnectorList,i.Properties=n(23);const{circle:P,ellipse:_,rectangle:C,roundedRectangle:M}=n(53),{sphere:T,cube:S,roundedCube:A,cylinder:z,roundedCylinder:E,cylinderElliptic:O,polyhedron:k}=n(54);i.sphere=T,i.cube=S,i.roundedCube=A,i.cylinder=z,i.roundedCylinder=E,i.cylinderElliptic=O,i.polyhedron=k,s.circle=P,s.ellipse=_,s.rectangle=C,s.roundedRectangle=M;const{fromPolygons:D,fromCompactBinary:V,fromObject:I,fromSlices:B}=n(7);i.fromCompactBinary=V,i.fromObject=I,i.fromSlices=B,i.fromPolygons=D;const F=n(8);s.fromSides=F.fromSides,s.fromObject=F.fromObject,s.fromPoints=F.fromPoints,s.fromPointsNoCheck=F.fromPointsNoCheck,s.fromPath2=F.fromPath2,s.fromFakeCSG=F.fromFakeCSG,s.fromCompactBinary=F.fromCompactBinary;const j=n(15);r(i.prototype),r(i.Vector2D.prototype),r(i.Vector3D.prototype),r(i.Vertex.prototype),r(i.Plane.prototype),r(i.Polygon.prototype),r(i.Line2D.prototype),r(i.Line3D.prototype),r(i.Path2D.prototype),r(i.OrthoNormalBasis.prototype),r(i.Connector.prototype),r(s.prototype),r(s.Side.prototype),r(s.Vertex.prototype),i.parseOptionAs2DVector=j.parseOptionAs3DVector,i.parseOptionAs3DVector=j.parseOptionAs3DVector,i.parseOptionAs3DVectorList=j.parseOptionAs3DVectorList,i.parseOptionAsBool=j.parseOptionAsBool,i.parseOptionAsFloat=j.parseOptionAsFloat,i.parseOptionAsInt=j.parseOptionAsInt,i.Polygon2D.prototype=s.prototype;const{isCAG:N,isCSG:G}=n(6),R=Object.assign({},{CSG:i,CAG:s},j,{isCAG:N,isCSG:G});t.exports=R},function(t,e,n){const r=n(2),{solve2Linear:o}=n(6),i=function(t,e){t=new r(t),e=parseFloat(e);let n=t.length();e*=n,t=t.times(1/n),this.normal=t,this.w=e};i.fromPoints=function(t,e){t=new r(t);let n=(e=new r(e)).minus(t).normal().negated().unit(),o=t.dot(n);return new i(n,o)},i.prototype={reverse:function(){return new i(this.normal.negated(),-this.w)},equals:function(t){return t.normal.equals(this.normal)&&t.w===this.w},origin:function(){return this.normal.times(this.w)},direction:function(){return this.normal.normal()},xAtY:function(t){return(this.w-this.normal._y*t)/this.normal.x},absDistanceToPoint:function(t){let e=(t=new r(t)).dot(this.normal);return Math.abs(e-this.w)},intersectWithLine:function(t){let e=o(this.normal.x,this.normal.y,t.normal.x,t.normal.y,this.w,t.w);return e=new r(e),e},transform:function(t){let e=new r(0,0),n=this.normal.times(this.w),o=e.multiply4x4(t),s=this.normal.multiply4x4(t).minus(o),l=n.multiply4x4(t),a=s.dot(l);return new i(s,a)}},t.exports=i},function(t,e,n){const{EPS:r,defaultResolution3D:o}=n(0),i=n(11),{parseOptionAs3DVector:s,parseOptionAsBool:l,parseOptionAsFloat:a,parseOptionAsInt:u}=n(15),c=n(1),h=(n(2),n(10)),f=n(19),{Connector:p}=n(13),{fromPolygons:d}=n(7),{cagToPointsArray:m,clamp:g,rightMultiply1x3VectorToArray:y,polygonFromPoints:w}=n(45),{fromPoints:x}=n(8),v=function(t,e,n,r){if(!(e instanceof i))throw new Error("extrudeInPlane: the first parameter should be a OrthoNormalBasis");let o=t.extrude({offset:[0,0,n]});l(r,"symmetrical",!1)&&(o=o.translate([0,0,-n/2]));let s=e.getInverseProjectionMatrix();return o=o.transform(s),o};t.exports={extrudeInOrthonormalBasis:v,extrudeInPlane:function(t,e,n,r,o){return v(t,i.GetCartesian(e,n),r,o)},extrude:function(t,e){const r=n(12);if(0===t.sides.length)return new r;let i=s(e,"offset",[0,0,1]),l=a(e,"twistangle",0),h=u(e,"twiststeps",o);if(0===i.z)throw new Error("offset cannot be orthogonal to Z axis");(0===l||h<1)&&(h=1);let f=c.Create(0,1,0),m=[];m=m.concat(t._toPlanePolygons({translation:[0,0,0],normalVector:f,flipped:!(i.z<0)})),m=m.concat(t._toPlanePolygons({translation:i,normalVector:f.rotateZ(l),flipped:i.z<0}));for(let e=0;e<h;e++){let n=new p(i.times(e/h),[0,0,i.z],f.rotateZ(e*l/h)),r=new p(i.times((e+1)/h),[0,0,i.z],f.rotateZ((e+1)*l/h));m=m.concat(t._toWallPolygons({toConnector1:n,toConnector2:r},e))}return d(m)},linear_extrude:function(t,e){const{height:n,twist:r,slices:o,center:i}=Object.assign({},{height:1,slices:10,twist:0,center:!1},t);let s=e.extrude({offset:[0,0,n],twistangle:r,twiststeps:o});if(!0===i){const t=s.getBounds(),e=t[1].plus(t[0]).times(-.5);s=s.translate(e)}return s},rotate_extrude:function(t,e){const n={fn:32,startAngle:0,angle:360,overflow:"cap"};t=Object.assign({},n,t);let{fn:r,startAngle:o,angle:i,overflow:s}=t;if("cap"!==s)throw new Error("only capping of overflowing points is supported !");arguments.length<2&&(e=t);const l=i>0,a=l?g(o+i,0,360):g(o+i,-360,0),u=Math.max(Math.floor(Math.abs(a)/45),1,r),c=1e-5;let f=m(e);const p=f.filter(t=>t[0]<0),v=f.filter(t=>t[0]>=0),b=p.length>0&&v.length>0;b&&"cap"===s&&(p.length>v.length?f=f.map((function(t){return[Math.min(t[0],0),t[1]]})):v.length>=p.length&&(f=f.map((function(t){return[Math.max(t[0],0),t[1]]}))));let P=[];for(let t=1;t<u+1;t++){for(let e=0;e<f.length-1;e++){const n=f[e],r=f[e+1];let s=h.rotationZ((t-1)/u*i+o),a=h.rotationZ(t/u*i+o);const p=y(s,[n[0],0,n[1]]),d=y(a,[n[0],0,n[1]]),m=y(s,[r[0],0,r[1]]),g=y(a,[r[0],0,r[1]]);let x=!1;Math.abs(p[0]-d[0])<c&&Math.abs(m[1]-g[1])<c&&(x=!0),l?(P.push(w([p,m,g])),x||P.push(w([g,d,p]))):(x||P.push(w([p,d,g])),P.push(w([g,m,p])))}if(Math.abs(i)<360){const t=x(f),e=h.rotationX(90).multiply(h.rotationZ(-o)),n=t._toPlanePolygons({flipped:l}).map(t=>t.transform(e)),r=h.rotationX(90).multiply(h.rotationZ(-i-o)),s=t._toPlanePolygons({flipped:!l}).map(t=>t.transform(r));P=P.concat(n).concat(s)}}return d(P).reTesselated().canonicalized()},rotateExtrude:function(t,e){void 0===e&&(e={});let n=a(e,"angle",360),i=u(e,"resolution",o);n=n>360?n%360:n;let s=[0,0,0],l=c.Create(0,1,0),h=[0,0,1],f=[],m=new p(s,l,h);if(n>0&&n<360){let e=new p(s,l.rotateZ(-n),h);f=f.concat(t._toPlanePolygons({toConnector:m,flipped:!0})),f=f.concat(t._toPlanePolygons({toConnector:e}))}let g,y=m,w=n/i;for(let e=w;e<=n+r;e+=w)g=new p(s,l.rotateZ(-e),h),f=f.concat(t._toWallPolygons({toConnector1:y,toConnector2:g},0)),y=g;return d(f).reTesselated()},rectangular_extrude:function(t,e){const{w:n,h:r,fn:o,closed:i,round:s}=Object.assign({},{w:1,h:1,fn:8,closed:!1,round:!0},e);return new f(t,i).rectangularExtrude(n,r,o,s)}}},function(t,e){const n=function(){};n.prototype={_transform:function(t){let e=new n;return n.transformObj(this,e,t),e},_merge:function(t){let e=new n;return n.cloneObj(this,e),n.addFrom(e,t),e}},n.transformObj=function(t,e,r){for(let o in t){if("_transform"===o)continue;if("_merge"===o)continue;let i=t[o],s=i;"object"==typeof i&&("transform"in i&&"function"==typeof i.transform?s=i.transform(r):i instanceof Array?(s=[],n.transformObj(i,s,r)):i instanceof n&&(s=new n,n.transformObj(i,s,r))),e[o]=s}},n.cloneObj=function(t,e){for(let r in t){if("_transform"===r)continue;if("_merge"===r)continue;let o=t[r],i=o;if("object"==typeof o)if(o instanceof Array){i=[];for(let t=0;t<o.length;t++)i.push(o[t])}else o instanceof n&&(i=new n,n.cloneObj(o,i));e[r]=i}},n.addFrom=function(t,e){for(let r in e)"_transform"!==r&&"_merge"!==r&&(r in t&&"object"==typeof t[r]&&t[r]instanceof n&&"object"==typeof e[r]&&e[r]instanceof n?n.addFrom(t[r],e[r]):r in t||(t[r]=e[r]))},t.exports=n},function(t,e,n){const r=n(9),{fromPoints:o}=n(8);function i(t){const e=o(t);this.sides=e.sides}i.prototype=r.prototype,t.exports=i},function(t,e,n){const{areaEPS:r}=n(0),{linesIntersect:o}=n(41),i=function(t,e){let n=null,r=null,o=!1;return t.sides.forEach(t=>{n=t.vertex0.pos,r=t.vertex1.pos,i.c1(e,n,r)&&i.c2(e,n,r)&&(o=!o)}),o};i.c1=(t,e,n)=>e.y>t.y!=n.y>t.y,i.c2=(t,e,n)=>t.x<(n.x-e.x)*(t.y-e.y)/(n.y-e.y)+e.x;t.exports={isCAGValid:function(t){let e=[];t.isSelfIntersecting(!0)&&e.push("Self intersects");let n={};t.sides.map((function(t){function e(t){let e=t.x+" "+t.y;e in n||(n[e]=0),n[e]++}e(t.vertex0.pos),e(t.vertex1.pos)}));for(let t in n){let r=n[t];1&r&&e.push("Uneven number of sides ("+r+") for point "+t)}let o=t.area();if(o<r&&e.push("Area is "+o),e.length>0){let t="";throw e.map((function(e){t+=e+"\n"})),new Error(t)}},isSelfIntersecting:function(t,e){let n=t.sides.length;for(let r=0;r<n;r++){let i=t.sides[r];for(let s=r+1;s<n;s++){let n=t.sides[s];if(o(i.vertex0.pos,i.vertex1.pos,n.vertex0.pos,n.vertex1.pos))return e&&(console.log("side "+r+": "+i),console.log("side "+s+": "+n)),!0}}return!1},hasPointInside:i,contains:function(t,e){for(let n=0,r=e.sides.length;n<r;n++)if(!i(t,e.sides[n].vertex0.pos))return!1;return!0}}},function(t,e,n){const{EPS:r}=n(0),o=n(27),i=n(42),{fromPolygons:s}=n(7),{fromSides:l}=n(8),a=function(t,e){if(t.isCanonicalized)return t;{const e=new o;let n=c(e,t);return n.isCanonicalized=!0,n.isRetesselated=t.isRetesselated,n.properties=t.properties,n}},u=function(t,e){if(t.isCanonicalized)return t;{let e=new i,n=h(e,t);return n.isCanonicalized=!0,n}},c=function(t,e){let n=t,r=[];return e.polygons.forEach((function(t){let e=n.getPolygon(t);e.vertices.length>=3&&r.push(e)})),s(r)},h=function(t,e){let n=t,o=e.sides.map((function(t){return n.getSide(t)})).filter((function(t){return t.length()>r}));return l(o)};t.exports=function(t,e){return t.isCanonicalized?t:"sides"in t?u(t,e):a(t,e)}},function(t,e,n){const{EPS:r}=n(0),o=n(3),i=n(28),s=function(){this.vertexfactory=new i(5,r),this.planefactory=new i(4,r),this.polygonsharedfactory={}};s.prototype={getPolygonShared:function(t){let e=t.getHash();return e in this.polygonsharedfactory?this.polygonsharedfactory[e]:(this.polygonsharedfactory[e]=t,t)},getVertex:function(t){let e=[t.pos._x,t.pos._y,t.pos._z,t.uv._x,t.uv._y];return this.vertexfactory.lookupOrCreate(e,(function(e){return t}))},getPlane:function(t){let e=[t.normal._x,t.normal._y,t.normal._z,t.w];return this.planefactory.lookupOrCreate(e,(function(e){return t}))},getPolygon:function(t){let e=this.getPlane(t.plane),n=this.getPolygonShared(t.shared),r=this,i=t.vertices.map((function(t){return r.getVertex(t)})),s=[];if(i.length>0){let t=i[i.length-1].getTag();i.forEach((function(e){let n=e.getTag();n!==t&&s.push(e),t=n}))}return s.length<3&&(s=[]),new o(s,n,e)}},t.exports=s},function(t,e){const n=function(t,e){this.lookuptable={},this.multiplier=1/e};n.prototype={lookupOrCreate:function(t,e){let n="",r=this.multiplier;if(t.forEach((function(t){let e=Math.round(t*r);n+=e+"/"})),n in this.lookuptable)return this.lookuptable[n];{let o=e(t),i=t.map((function(t){let e=Math.floor(t*r);return[e+"/",e+1+"/"]})),s=1<<t.length;for(let t=0;t<s;++t){let e=t;n="",i.forEach((function(t){n+=t[1&e],e>>=1})),this.lookuptable[n]=o}return o}}},t.exports=n},function(t,e,n){const r=n(27),o=n(43),{fromPolygons:i}=n(7);t.exports=function(t){if(t.isRetesselated)return t;{let e={},n=t.isCanonicalized,s=new r;t.polygons.map((function(t){let r=t.plane,o=t.shared;n||(r=s.getPlane(r),o=s.getPolygonShared(o));let i=r.getTag()+"/"+o.getTag();i in e?e[i].push(t):e[i]=[t]}));let l=[];for(let t in e){let n=e[t];if(n.length<2)l=l.concat(n);else{let t=[];o(n,t),l=l.concat(t)}}let a=i(l);return a.isRetesselated=!0,a.properties=t.properties,a}}},function(t,e,n){const r=n(10),o=n(1),{Connector:i}=n(13),{fromPoints:s}=n(8),l=n(2);t.exports={lieFlat:function(t){let e=t.getTransformationToFlatLying();return t.transform(e)},getTransformationToFlatLying:function(t){return t.getTransformationAndInverseTransformationToFlatLying()[0]},getTransformationAndInverseTransformationToFlatLying:function(t){if(0===t.polygons.length){let t=new r;return[t,t]}{let e=t.canonicalized(),n={};e.polygons.map((function(t){n[t.plane.getTag()]=t.plane}));let s,l,a=new o(1,0,0),u=new o(0,1,0),c=new o(0,0,1),h=new i([0,0,0],[0,0,-1],a),f=new i([0,0,0],[0,0,-1],u),p=!0,d=0,m=0;for(let t in n){let g,y,w=n[t],x=w.normal.times(w.w);if(w.normal.cross(a).length()>w.normal.cross(u).length()){let t=new i(x,w.normal,a);g=t.getTransformationTo(h,!1,0),y=h.getTransformationTo(t,!1,0)}else{let t=new i(x,w.normal,u);g=t.getTransformationTo(f,!1,0),y=f.getTransformationTo(t,!1,0)}let v=e.transform(g),b=-w.normal.dot(c),P=v.getBounds(),_=P[1].z-P[0].z,C=p;if(C||(_<d||_===d&&b>m)&&(C=!0),C){let t=new o([-.5*(P[1].x+P[0].x),-.5*(P[1].y+P[0].y),-P[0].z]);g=g.multiply(r.translation(t)),y=r.translation(t.negated()).multiply(y),d=_,m=b,s=g,l=y}p=!1}return[s,l]}},overCutInsideCorners:function(t,e){let n=t.canonicalized(),r={};n.sides.map((function(t){t.vertex0.getTag()in r||(r[t.vertex0.getTag()]={pos:t.vertex0.pos,from:[],to:[]}),r[t.vertex0.getTag()].to.push(t.vertex1.pos),t.vertex1.getTag()in r||(r[t.vertex1.getTag()]={pos:t.vertex1.pos,from:[],to:[]}),r[t.vertex1.getTag()].from.push(t.vertex0.pos)}));let o=[];for(let t in r){let n=r[t];if(1===n.from.length&&1===n.to.length){let t=n.from[0],r=n.pos,i=n.to[0],a=r.minus(t).unit(),u=i.minus(r).unit();if(a.cross(u)<.001){let t=u.angleRadians()-a.angleRadians()+Math.PI;t<0?t+=2*Math.PI:t>=2*Math.PI&&(t-=2*Math.PI);let n=u.minus(a).unit(),i=30/180*Math.PI,c=e/Math.cos(i/2),h=r.plus(n.times(c)),f=t+n.angleRadians(),p=2*(Math.PI-t),d=2*Math.ceil(p/i/2),m=[h];for(let t=0;t<=d;t++){let e=f+t/d*p,n=l.fromAngleRadians(e).times(c).plus(h);m.push(n)}o.push(s(m))}}}return n.subtract(o)}}},function(t,e,n){const r=n(47);t.exports=function(t,e){t=Object.assign({},{axes:[!0,!0,!0],center:[0,0,0]},t);const{axes:n,center:o}=t,i=(e=r(e)).map((function(t){let e=t.getBounds(),r=[0,0,0];return n[0]&&(r[0]=o[0]-(e[0].x+(e[1].x-e[0].x)/2)),n[1]&&(r[1]=o[1]-(e[0].y+(e[1].y-e[0].y)/2)),n[2]&&(r[2]=o[2]-(e[0].z+(e[1].z-e[0].z)/2)),t.translate(r)}));return 1===i.length?i[0]:i}},function(t,e,n){const{EPS:r,angleEPS:o}=n(0),i=n(5),s=n(2),l=n(3),{fnNumberSort:a,isCSG:u}=n(6),{fromPoints:c,fromPointsNoCheck:h}=n(8),f=function(t,e,i){const l=n(9);(i=i||8)<4&&(i=4);let a=[],u={};t.canonicalized().sides.map((function(t){let n=t.vertex1.pos.minus(t.vertex0.pos),o=n.length();if(o>r){n=n.times(1/o);let r=n.normal().times(e),i=[t.vertex1.pos.plus(r),t.vertex1.pos.minus(r),t.vertex0.pos.minus(r),t.vertex0.pos.plus(r)],s=c(i);a.push(s);for(let e=0;e<2;e++){let n=0===e?t.vertex0.pos:t.vertex1.pos,r=0===e?t.vertex1.pos:t.vertex0.pos,o=n.x+" "+n.y;o in u||(u[o]=[]),u[o].push({p1:n,p2:r})}}}));for(let t in u){let n,r,l=u[t],c=l[0].p1;if(2===l.length){let t=l[0].p2,e=l[1].p2;if(n=t.minus(c).angleDegrees(),r=e.minus(c).angleDegrees(),r<n&&(r+=360),r>=n+360&&(r-=360),r<n+180){let t=r;r=n+360,n=t}n+=90,r-=90}else n=0,r=360;let f=r>n+359.999;if(f&&(n=0,r=360),r>n+o){let t=[];f||t.push(c);let o=Math.round(i*(r-n)/360);o<1&&(o=1);for(let i=0;i<=o;i++){let l=n+i/o*(r-n);i===o&&(l=r);let a=c.plus(s.fromAngleDegrees(l).times(e));(!f||i>0)&&t.push(a)}let l=h(t);a.push(l)}}let f=new l;return f=f.union(a),f},p=function(t,e,o,s){const u=n(12),{fromPolygons:c}=n(7);let h,f=t.reTesselated();h=s?f:new u,f.polygons.map((function(t){let n=t.plane.normal.unit().times(2*e),r=t.translate(n.times(-.5)).extrude(n);h=h.unionSub(r,!1,!1)}));let p={};f.polygons.map((function(t){let e=t.vertices.length,n=t.vertices[e-1],r=n.getTag();for(let o=0;o<e;o++){let e,i,s=t.vertices[o],l=s.getTag();e=l<r?l+"-"+r:r+"-"+l,e in p?i=p[e]:(i={v1:n,v2:s,planenormals:[]},p[e]=i),i.planenormals.push(t.plane.normal),r=l,n=s}}));for(let t in p){let n=p[t],s=n.v1.pos,u=n.v2.pos,f=u.minus(s).unit(),d=n.planenormals[0].unit(),m=d.cross(f),g=[];for(let t=0;t<o;t++)g.push(t*Math.PI*2/o);for(let t=0,e=n.planenormals.length;t<e;t++){let e=n.planenormals[t],r=m.dot(e),o=d.dot(e),i=Math.atan2(r,o);i<0&&(i+=2*Math.PI),g.push(i),i=Math.atan2(-r,-o),i<0&&(i+=2*Math.PI),g.push(i)}g=g.sort(a);let y,w,x=g.length,v=[],b=[],P=[];for(let t=-1;t<x;t++){let n=g[t<0?t+x:t],o=Math.sin(n),a=Math.cos(n),c=d.times(a*e).plus(m.times(o*e)),h=s.plus(c),f=u.plus(c),p=!1;if(t>=0&&h.distanceTo(y)<r&&(p=!0),!p){if(t>=0){v.push(new i(h)),b.push(new i(f));let t=[new i(w),new i(f),new i(h),new i(y)],e=new l(t);P.push(e)}y=h,w=f}}b.reverse(),P.push(new l(v)),P.push(new l(b));let _=c(P);h=h.unionSub(_,!1,!1)}let d={};f.polygons.map((function(t){t.vertices.map((function(e){let n,r=e.getTag();r in d?n=d[r]:(n={pos:e.pos,normals:[]},d[r]=n),n.normals.push(t.plane.normal)}))}));for(let t in d){let n=d[t],r=n.normals[0].unit(),i=null,s=0;for(let t=1;t<n.normals.length;t++){let e=n.normals[t].unit(),o=r.cross(e).length();o>.05&&o>s&&(s=o,i=e)}i||(i=r.randomNonParallelVector());let l=r.cross(i).unit(),a=l.cross(r),c=u.sphere({center:n.pos,radius:e,resolution:o,axes:[r,l,a]});h=h.unionSub(c,!1,!1)}return h};t.exports={expand:function(t,e,n){let r;return u(t)?(r=t.union(p(t,e,n)),r=r.reTesselated(),r.properties=t.properties):r=t.union(f(t,e,n)),r},contract:function(t,e,n){let r;return u(t)?(r=t.subtract(p(t,e,n)),r=r.reTesselated(),r.properties=t.properties):r=t.subtract(f(t,e,n)),r},expandedShellOfCAG:f,expandedShellOfCCSG:p}},function(t,e,n){const{CAG:r}=n(20),{fromPoints:o}=n(8);t.exports={circle:function(t){let{r:e,fn:n,center:o}=Object.assign({},{r:1,fn:32,center:!1},t);!t||t.r||t.fn||t.center||(e=t);let i=!0===o?[0,0]:[e,e];return r.circle({center:i,radius:e,resolution:n})},square:function(){let t,e=[1,1],n=arguments,o=n[0];return o&&Number.isFinite(o)&&(e=[o,o]),o&&o.length&&(e=n[0],o=n[1]),o&&o.size&&o.size.length&&(e=o.size),t=[e[0]/2,e[1]/2],o&&!0===o.center&&(t=[0,0]),r.rectangle({center:t,radius:[e[0]/2,e[1]/2]})},polygon:function(t){let e=[];return t.paths&&t.paths.length&&t.paths[0].length?("number"!=typeof t.points[0][0]&&(t.points=t.points.reduce((t,e)=>t.concat(e))),t.paths.forEach((n,r)=>{e.push([]),n.forEach(n=>e[r].push(t.points[n]))})):t.paths&&t.paths.length?t.paths.forEach(n=>e.push(t.points[n])):e=t.length?t:t.points,o(e)},triangle:function(){let t=arguments;return t[0]&&t[0].length&&(t=t[0]),o(t)}}},function(t,e,n){const r=n(10),o=n(4),i=n(1),{union:s}=n(18),{fromPoints:l}=n(8),{isCAG:a}=n(6);function u(){let t=[],e=arguments;e[0].length&&(e=e[0]);let n=[];for(let r=0;r<e.length;r++){let o=e[r];if(!a(o))throw new Error("ERROR: hull() accepts only 2D forms / CAG");for(let e=0;e<o.sides.length;e++){let r=o.sides[e].vertex0.pos.x,i=o.sides[e].vertex0.pos.y;n[r+","+i]||(t.push({x:r,y:i}),n[r+","+i]++)}}let r=function(t,e,n){this.index=t,this.angle=e,this.distance=n,this.compare=function(t){return this.angle<t.angle?-1:this.angle>t.angle?1:this.distance<t.distance?-1:this.distance>t.distance?1:0}},o=function(){this.points=null,this.indices=null,this.getIndices=function(){return this.indices},this.clear=function(){this.indices=null,this.points=null},this.ccw=function(t,e,n){let r=(this.points[e].x-this.points[t].x)*(this.points[n].y-this.points[t].y)-(this.points[e].y-this.points[t].y)*(this.points[n].x-this.points[t].x);return r<1e-5?0:r},this.angle=function(t,e){return Math.atan2(this.points[e].y-this.points[t].y,this.points[e].x-this.points[t].x)},this.distance=function(t,e){return(this.points[e].x-this.points[t].x)*(this.points[e].x-this.points[t].x)+(this.points[e].y-this.points[t].y)*(this.points[e].y-this.points[t].y)},this.compute=function(t){if(this.indices=null,t.length<3)return;this.points=t;let e=0;for(let t=1;t<this.points.length;t++)this.points[t].y===this.points[e].y?this.points[t].x<this.points[e].x&&(e=t):this.points[t].y<this.points[e].y&&(e=t);let n=[],o=0,i=0;for(let t=0;t<this.points.length;t++)t!==e&&(o=this.angle(e,t),o<0&&(o+=Math.PI),i=this.distance(e,t),n.push(new r(t,o,i)));n.sort((function(t,e){return t.compare(e)}));let s,l=new Array(this.points.length+1),a=2;for(let t=0;t<this.points.length;t++)t!==e&&(l[a]=n[a-2].index,a++);l[0]=l[this.points.length],l[1]=e;let u=2;for(let t=3;t<=this.points.length;t++){for(;this.ccw(l[u-1],l[u],l[t])<=0;)u--;u++,s=l[t],l[t]=l[u],l[u]=s}this.indices=new Array(u);for(let t=0;t<u;t++)this.indices[t]=l[t+1]}},i=new o;i.compute(t);let s=i.getIndices();if(s&&s.length>0){let e=[];for(let n=0;n<s.length;n++)e.push(t[s[n]]);return l(e)}}t.exports={translate:function(t,...e){const n=e.length>=1&&e[0].length?e[0]:e;let r=n[0];if(n.length>1)for(let t=1;t<n.length;t++)r=r.union(n[t]);return r.translate(t)},center:function(t,...e){const n=e.length>=1&&e[0].length?e[0]:e;let r=n[0];if(n.length>1)for(let t=1;t<n.length;t++)r=r.union(n[t]);return Array.isArray(t)||(t=[t,t,t]),r.center(t)},scale:function(t,...e){const n=e.length>=1&&e[0].length?e[0]:e;let r=n[0];if(n.length>1)for(let t=1;t<n.length;t++)r=r.union(n[t]);return r.scale(t)},rotate:function(){let t,e,n,r=1,o=arguments;for(o[0].length?(n=o[0],e=1,o[1].length&&(o=o[1],e=0)):(r=o[0],n=o[1],e=2,o[2].length&&(o=o[2],e=0)),t=o[e++];e<o.length;e++)t=t.union(o[e]);return 1!==r?t.rotate([0,0,0],n,r):t.rotateX(n[0]).rotateY(n[1]).rotateZ(n[2])},transform:function(t,...e){const n=e.length>=1&&e[0].length?e[0]:e;let o,i=n[0];if(n.length>1)for(let t=1;t<n.length;t++)i=i.union(n[t]);if(!Array.isArray(t))throw new Error("Matrix needs to be an array");return t.forEach(t=>{if(!Number.isFinite(t))throw new Error("you can only use a flat array of valid, finite numbers (float and integers)")}),o=new r(t),i.transform(o)},mirror:function(t,...e){const n=e.length>=1&&e[0].length?e[0]:e;let r=n[0];if(n.length>1)for(let t=1;t<n.length;t++)r=r.union(n[t]);const s=new o(new i(t[0],t[1],t[2]).unit(),0);return r.mirrored(s)},expand:function(t,e,n){return n.expand(t,e)},contract:function(t,e,n){return n.contract(t,e)},minkowski:function(){console.log("minkowski() not yet implemented")},hull:u,chain_hull:function(t,e){let n=arguments,r=!1,o=0;void 0!==n[o].closed&&(r=n[o++].closed),n[o].length&&(n=n[o]);let i=[],l=n.length-(r?0:1);for(let t=0;t<l;t++)i.push(u(n[t],n[(t+1)%n.length]));return s(i)}}},function(t,e,n){t.exports=n(36)},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}(n(37))},function(t,e,n){"use strict";var r;Object.defineProperty(e,"__esModule",{value:!0}),e.primitives3d=n(38),e.primitives2d=n(33),e.booleanOps=n(18),e.transformations=n(34),e.extrusions=n(22),e.color=n(55),e.maths=n(56),e.text=n(57),e.CAG=(r=n(20)).CAG,e.CSG=r.CSG,e.isCAG=r.isCAG,e.isCSG=r.isCSG,e.csg={CAG:e.CAG,CSG:e.CSG}},function(t,e,n){const{CSG:r}=n(20),{circle:o}=n(33),{rotate_extrude:i}=n(22),{translate:s,scale:l}=n(34),a=n(3),u=n(1),c=n(5);function h(t){let{r:e,fn:n}=Object.assign({},{r:1,fn:5},t),r=[[.850651,0,-.525731],[.850651,-0,.525731],[-.850651,-0,.525731],[-.850651,0,-.525731],[0,-.525731,.850651],[0,.525731,.850651],[0,.525731,-.850651],[0,-.525731,-.850651],[-.525731,-.850651,-0],[.525731,-.850651,-0],[.525731,.850651,0],[-.525731,.850651,0]],o=[[0,9,1],[1,10,0],[6,7,0],[10,6,0],[7,9,0],[5,1,4],[4,1,9],[5,10,1],[2,8,3],[3,11,2],[2,5,4],[4,8,2],[2,11,5],[3,7,6],[6,11,3],[8,7,3],[9,8,4],[11,10,5],[10,11,6],[8,9,7]],i=function(t,e,n){let r=t[0],o=t[1],i=t[2],l=n,a=[],u=[];for(let t=0;t<e;t++)for(let n=0;n<e-t;n++){let c=t/e,h=(t+1)/e,f=n/(e-t),p=(n+1)/(e-t),d=e-t-1?n/(e-t-1):1,m=[];m[0]=s(s(r,o,f),i,c),m[1]=s(s(r,o,p),i,c),m[2]=s(s(r,o,d),i,h);for(let t=0;t<3;t++){let e=Math.sqrt(m[t][0]*m[t][0]+m[t][1]*m[t][1]+m[t][2]*m[t][2]);for(let n=0;n<3;n++)m[t][n]/=e}if(a.push(m[0],m[1],m[2]),u.push([l,l+1,l+2]),l+=3,n<e-t-1){let f=e-t-1?(n+1)/(e-t-1):1;m[0]=s(s(r,o,p),i,c),m[1]=s(s(r,o,f),i,h),m[2]=s(s(r,o,d),i,h);for(let t=0;t<3;t++){let e=Math.sqrt(m[t][0]*m[t][0]+m[t][1]*m[t][1]+m[t][2]*m[t][2]);for(let n=0;n<3;n++)m[t][n]/=e}a.push(m[0],m[1],m[2]),u.push([l,l+1,l+2]),l+=3}}return{points:a,triangles:u,offset:l}};const s=function(t,e,n){let r=1-n,o=[];for(let i=0;i<3;i++)o[i]=t[i]*r+e[i]*n;return o};t&&t.fn&&(n=Math.floor(t.fn/6)),n<=0&&(n=1);let a=[],u=[],c=0;for(let t=0;t<o.length;t++){let e=i([r[o[t][0]],r[o[t][1]],r[o[t][2]]],n,c);a=a.concat(e.points),u=u.concat(e.triangles),c=e.offset}return l(e,f({points:a,triangles:u}))}function f(t){let e=[],r=t.triangles||t.polygons,o=t.colors||null;for(let n=0;n<r.length;n++){let i=[];for(let e=0;e<r[n].length;e++)i[e]=t.points[r[n][e]];let s=[];for(let t=r[n].length-1;t>=0;t--)s.push(new c(new u(i[t][0],i[t][1],i[t][2])));let l=a.defaultShared;o&&o[n]&&(l=a.Shared.fromColor(o[n])),e.push(new a(s,l))}const{fromPolygons:i}=n(7);return i(e)}t.exports={cube:function(t){let{round:e,radius:n,fn:o,size:i}=Object.assign({},{size:1,offset:[0,0,0],round:!1,radius:0,fn:8},t),l=[0,0,0],a=null;t&&t.length&&(a=t),t&&t.size&&t.size.length&&(a=t.size),t&&t.size&&!t.size.length&&(i=t.size),t&&"object"!=typeof t&&(i=t),t&&!0===t.round&&(e=!0,n=a&&a.length?(a[0]+a[1]+a[2])/30:i/10),t&&t.radius&&(e=!0,n=t.radius);let u=i,c=i,h=i;a&&a.length&&([u,c,h]=a),l=[u/2,c/2,h/2];let f=e?r.roundedCube({radius:[u/2,c/2,h/2],roundradius:n,resolution:o}):r.cube({radius:[u/2,c/2,h/2]});return t&&t.center&&t.center.length?l=[t.center[0]?0:u/2,t.center[1]?0:c/2,t.center[2]?0:h/2]:t&&!0===t.center?l=[0,0,0]:t&&!1===t.center&&(l=[u/2,c/2,h/2]),l[0]||l[1]||l[2]?s(l,f):f},sphere:function(t){let{r:e,fn:n,type:o}=Object.assign({},{r:1,fn:32,type:"normal"},t),i=[0,0,0];t&&"object"!=typeof t&&(e=t);let l="geodesic"===o?h(t):r.sphere({radius:e,resolution:n});return t&&t.center&&t.center.length?i=[t.center[0]?0:e,t.center[1]?0:e,t.center[2]?0:e]:t&&!0===t.center?i=[0,0,0]:t&&!1===t.center&&(i=[e,e,e]),i[0]||i[1]||i[2]?s(i,l):l},cylinder:function(t){const e={r:1,r1:1,r2:1,h:1,fn:32,round:!1};let n,{r1:o,r2:i,h:l,fn:a,round:u}=Object.assign({},e,t),c=[0,0,0],h=arguments;if(t&&t.d&&(o=i=t.d/2),t&&t.r&&(o=t.r,i=t.r),t&&t.h&&(l=t.h),t&&(t.r1||t.r2)&&(o=t.r1,i=t.r2,t.h&&(l=t.h)),t&&(t.d1||t.d2)&&(o=t.d1/2,i=t.d2/2),h&&h[0]&&h[0].length&&(h=h[0],o=h[0],i=h[1],l=h[2],4===h.length&&(a=h[3])),t&&t.start&&t.end)n=u?r.roundedCylinder({start:t.start,end:t.end,radiusStart:o,radiusEnd:i,resolution:a}):r.cylinder({start:t.start,end:t.end,radiusStart:o,radiusEnd:i,resolution:a});else{n=u?r.roundedCylinder({start:[0,0,0],end:[0,0,l],radiusStart:o,radiusEnd:i,resolution:a}):r.cylinder({start:[0,0,0],end:[0,0,l],radiusStart:o,radiusEnd:i,resolution:a});let e=o>i?o:i;t&&t.center&&t.center.length?c=[t.center[0]?0:e,t.center[1]?0:e,t.center[2]?-l/2:0]:t&&!0===t.center?c=[0,0,-l/2]:t&&!1===t.center&&(c=[0,0,0]),n=c[0]||c[1]||c[2]?s(c,n):n}return n},geodesicSphere:h,torus:function(t){t=Object.assign({},{ri:1,ro:4,fni:16,fno:32,roti:0},t);let{ri:e,ro:n,fni:r,fno:l,roti:a}=t;r<3&&(r=3),l<3&&(l=3);let u=o({r:e,fn:r,center:!0});return a&&(u=u.rotateZ(a)),i({fn:l},s([n,0,0],u))},polyhedron:f}},function(t,e,n){const r=n(10),o=n(1),i=n(4);t.exports={addTransformationMethodsToPrototype:function(t){t.mirrored=function(t){return this.transform(r.mirroring(t))},t.mirroredX=function(){let t=new i(o.Create(1,0,0),0);return this.mirrored(t)},t.mirroredY=function(){let t=new i(o.Create(0,1,0),0);return this.mirrored(t)},t.mirroredZ=function(){let t=new i(o.Create(0,0,1),0);return this.mirrored(t)},t.translate=function(t){return this.transform(r.translation(t))},t.scale=function(t){return this.transform(r.scaling(t))},t.rotateX=function(t){return this.transform(r.rotationX(t))},t.rotateY=function(t){return this.transform(r.rotationY(t))},t.rotateZ=function(t){return this.transform(r.rotationZ(t))},t.rotate=function(t,e,n){return this.transform(r.rotation(t,e,n))},t.rotateEulerAngles=function(t,e,n,i){i=i||[0,0,0];let s=r.rotationZ(t),l=r.rotationX(e),a=r.rotationZ(n),u=r.translation(new o(i));return this.transform(a.multiply(l).multiply(s).multiply(u))},t.rotateEulerXYZ=function(t,e,n,i){i=i||[0,0,0];let s=r.rotationX(t),l=r.rotationY(e),a=r.rotationZ(n),u=r.translation(new o(i));return this.transform(a.multiply(l).multiply(s).multiply(u))}},addCenteringToPrototype:function(t,e){t.center=function(t){(t=Array.prototype.map.call(arguments,(function(t){return t}))).length||(t=e.slice());let n=this.getBounds();return this.translate(e.map((function(e){return t.indexOf(e)>-1?-(n[0][e]+n[1][e])/2:0})))}}}},function(t,e,n){const{_CSGDEBUG:r,EPS:o}=n(0),i=(n(5),n(3));const s=function(){this.parent=null,this.children=[],this.polygon=null,this.removed=!1};s.prototype={addPolygons:function(t){if(!this.isRootNode())throw new Error("Assertion failed");let e=this;t.map((function(t){e.addChild(t)}))},remove:function(){if(!this.removed){if(this.removed=!0,r){if(this.isRootNode())throw new Error("Assertion failed");if(this.children.length)throw new Error("Assertion failed")}let t=this.parent.children,e=t.indexOf(this);if(e<0)throw new Error("Assertion failed");t.splice(e,1),this.parent.recursivelyInvalidatePolygon()}},isRemoved:function(){return this.removed},isRootNode:function(){return!this.parent},invert:function(){if(!this.isRootNode())throw new Error("Assertion failed");this.invertSub()},getPolygon:function(){if(!this.polygon)throw new Error("Assertion failed");return this.polygon},getPolygons:function(t){let e,n,r,o,i=[this],s=[i];for(e=0;e<s.length;++e)for(i=s[e],n=0,r=i.length;n<r;n++)o=i[n],o.polygon?t.push(o.polygon):s.push(o.children)},splitByPlane:function(t,e,n,r,o){if(this.children.length){let i,s,l,a,u,c=[this.children];for(i=0;i<c.length;i++)for(u=c[i],s=0,l=u.length;s<l;s++)a=u[s],a.children.length?c.push(a.children):a._splitByPlane(t,e,n,r,o)}else this._splitByPlane(t,e,n,r,o)},_splitByPlane:function(t,e,n,r,s){let l=this.polygon;if(l){let a=l.boundingSphere(),u=a[1]+o,c=t.normal,h=a[0],f=c.dot(h)-t.w;if(f>u)r.push(this);else if(f<-u)s.push(this);else{let a=function(t,e){let n={type:null,front:null,back:null},r=t.normal,s=e.vertices,l=s.length;if(e.plane.equals(t))n.type=0;else{let h=t.w,f=!1,p=!1,d=[],m=-o;for(let t=0;t<l;t++){let e=r.dot(s[t].pos)-h,n=e<0;d.push(n),e>o&&(f=!0),e<m&&(p=!0)}if(f||p)if(p)if(f){n.type=4;let r=[],h=[],f=d[0];for(let e=0;e<l;e++){let n=s[e],o=e+1;o>=l&&(o=0);let i=d[o];if(f===i)f?h.push(n):r.push(n);else{let e=n.pos,i=s[o].pos,l=(a=e,u=i,c=t.splitLineBetweenPoints(e,i),a.distanceTo(c)/a.distanceTo(u)),p=n.interpolate(s[o],l);f?(h.push(n),h.push(p),r.push(p)):(r.push(n),r.push(p),h.push(p))}f=i}let p=o*o;if(h.length>=3){let t=h[h.length-1];for(let e=0;e<h.length;e++){let n=h[e];n.pos.distanceToSquared(t.pos)<p&&(h.splice(e,1),e--),t=n}}if(r.length>=3){let t=r[r.length-1];for(let e=0;e<r.length;e++){let n=r[e];n.pos.distanceToSquared(t.pos)<p&&(r.splice(e,1),e--),t=n}}r.length>=3&&(n.front=new i(r,e.shared,e.plane)),h.length>=3&&(n.back=new i(h,e.shared,e.plane))}else n.type=3;else n.type=2;else{let t=r.dot(e.plane.normal);n.type=t>=0?0:1}}var a,u,c;return n}(t,l);switch(a.type){case 0:e.push(this);break;case 1:n.push(this);break;case 2:r.push(this);break;case 3:s.push(this);break;case 4:if(a.front){let t=this.addChild(a.front);r.push(t)}if(a.back){let t=this.addChild(a.back);s.push(t)}}}}},addChild:function(t){let e=new s;return e.parent=this,e.polygon=t,this.children.push(e),e},invertSub:function(){let t,e,n,r,o=[this],i=[o];for(t=0;t<i.length;t++)for(o=i[t],e=0,n=o.length;e<n;e++)r=o[e],r.polygon&&(r.polygon=r.polygon.flipped()),i.push(r.children)},recursivelyInvalidatePolygon:function(){let t=this;for(;t.polygon;)t.polygon=null,t.parent&&(t=t.parent)}};const l=function(t){this.polygonTree=new s,this.rootnode=new a(null),t&&this.addPolygons(t)};l.prototype={invert:function(){this.polygonTree.invert(),this.rootnode.invert()},clipTo:function(t,e){e=!!e,this.rootnode.clipTo(t,e)},allPolygons:function(){let t=[];return this.polygonTree.getPolygons(t),t},addPolygons:function(t){let e=this,n=t.map((function(t){return e.polygonTree.addChild(t)}));this.rootnode.addPolygonTreeNodes(n)}};const a=function(t){this.plane=null,this.front=null,this.back=null,this.polygontreenodes=[],this.parent=t};a.prototype={invert:function(){let t,e=[this];for(let n=0;n<e.length;n++){t=e[n],t.plane&&(t.plane=t.plane.flipped()),t.front&&e.push(t.front),t.back&&e.push(t.back);let r=t.front;t.front=t.back,t.back=r}},clipPolygons:function(t,e){let n,r={node:this,polygontreenodes:t},o=[];do{if(n=r.node,t=r.polygontreenodes,n.plane){let r=[],i=[],s=e?r:i,l=n.plane,a=t.length;for(let e=0;e<a;e++){let n=t[e];n.isRemoved()||n.splitByPlane(l,s,r,i,r)}n.front&&i.length>0&&o.push({node:n.front,polygontreenodes:i});let u=r.length;if(n.back&&u>0)o.push({node:n.back,polygontreenodes:r});else for(let t=0;t<u;t++)r[t].remove()}r=o.pop()}while(void 0!==r)},clipTo:function(t,e){let n=this,r=[];do{n.polygontreenodes.length>0&&t.rootnode.clipPolygons(n.polygontreenodes,e),n.front&&r.push(n.front),n.back&&r.push(n.back),n=r.pop()}while(void 0!==n)},addPolygonTreeNodes:function(t){let e,n={node:this,polygontreenodes:t},r=[];do{if(e=n.node,0===(t=n.polygontreenodes).length){n=r.pop();continue}let o=e;if(!e.plane){let n=t[0].getPolygon().plane;e.plane=n}let i=[],s=[];for(let e=0,n=t.length;e<n;++e)t[e].splitByPlane(o.plane,o.polygontreenodes,s,i,s);i.length>0&&(e.front||(e.front=new a(e)),r.push({node:e.front,polygontreenodes:i})),s.length>0&&(e.back||(e.back=new a(e)),r.push({node:e.back,polygontreenodes:s})),n=r.pop()}while(void 0!==n)},getParentPlaneNormals:function(t,e){e>0&&this.parent&&(t.push(this.parent.plane.normal),this.parent.getParentPlaneNormals(t,e-1))}},t.exports=l},function(t,e,n){const{EPS:r}=n(0),{solve2Linear:o}=n(6);t.exports={linesIntersect:function(t,e,n,i){if(e.equals(n)||i.equals(t)){if(i.minus(n).unit().plus(e.minus(t).unit()).length()<r)return!0}else{let r=e.minus(t),s=i.minus(n);if(Math.abs(r.cross(s))<1e-9)return!1;let l=o(-r.x,s.x,-r.y,s.y,t.x-n.x,t.y-n.y);if(l[0]>1e-6&&l[0]<.999999&&l[1]>1e-5&&l[1]<.999999)return!0}return!1}}},function(t,e,n){const r=n(28),{EPS:o}=n(0),i=n(17),s=function(){this.vertexfactory=new r(2,o)};s.prototype={getVertex:function(t){let e=[t.pos._x,t.pos._y];return this.vertexfactory.lookupOrCreate(e,(function(e){return t}))},getSide:function(t){let e=this.getVertex(t.vertex0),n=this.getVertex(t.vertex1);return new i(e,n)}},t.exports=s},function(t,e,n){const{EPS:r}=n(0),o=n(11),{interpolateBetween2DPointsForY:i,insertSorted:s,fnNumberSort:l}=n(6),a=n(5),u=n(2),c=n(21),h=n(3),f=function(t,e,n){return t.distanceTo(n)/t.distanceTo(e)};t.exports=function(t,e){let n=t.length;if(n>0){let p=t[0].plane,d=t[0].shared,m=new o(p),g=[],y=[],w=[],x={},v={},b={},P=1/r*10;for(let e=0;e<n;e++){let n=t[e],r=[],o=[],i=n.vertices.length,s=-1;if(i>0){let t,l,a;for(let c=0;c<i;c++){let i,h=m.to2D(n.vertices[c].pos),f=n.vertices[c].uv,p=Math.floor(h.y*P);p in b?i=b[p]:p+1 in b?i=b[p+1]:p-1 in b?i=b[p-1]:(i=h.y,b[p]=h.y),h=u.Create(h.x,i),r.push(h),o.push(f);let d=h.y;(0===c||d<t)&&(t=d,s=c),(0===c||d>l)&&(l=d,a=c),d in v||(v[d]={}),v[d][e]=!0}t>=l?(r=[],o=[],i=0,s=-1):(t in x||(x[t]=[]),x[t].push(e))}r.reverse(),o.reverse(),s=i-s-1,g.push(r),y.push(o),w.push(s)}let _=[];for(let t in v)_.push(t);_.sort(l);let C=[],M=[];for(let t=0;t<_.length;t++){let n,o=[],l=_[t],b=Number(l),P=v[l];for(let t=0;t<C.length;++t){let e=C[t],n=e.polygonindex;if(P[n]){let r=g[n],o=y[n],i=r.length,s=e.leftvertexindex,l=e.rightvertexindex;for(;;){let t=s+1;if(t>=i&&(t=0),r[t].y!==b)break;s=t}let a=l-1;if(a<0&&(a=i-1),r[a].y===b&&(l=a),s!==e.leftvertexindex&&s===l)C.splice(t,1),--t;else{e.leftvertexindex=s,e.rightvertexindex=l,e.topleft=r[s],e.topleftuv=o[s],e.topright=r[l],e.toprightuv=o[l];let t=s+1;t>=i&&(t=0),e.bottomleft=r[t],e.bottomleftuv=o[t];let n=l-1;n<0&&(n=i-1),e.bottomright=r[n],e.bottomrightuv=o[n]}}}if(t>=_.length-1)C=[],n=null;else{n=Number(_[t+1]);let e=.5*(b+n),r=x[l];for(let t in r){let n=r[t],o=g[n],l=y[n],a=o.length,u=w[n],c=u;for(;;){let t=c+1;if(t>=a&&(t=0),o[t].y!==b)break;if(t===u)break;c=t}let h=u;for(;;){let t=h-1;if(t<0&&(t=a-1),o[t].y!==b)break;if(t===c)break;h=t}let f=c+1;f>=a&&(f=0);let p=h-1;p<0&&(p=a-1);let d={polygonindex:n,leftvertexindex:c,rightvertexindex:h,topleft:o[c],topleftuv:l[c],topright:o[h],toprightuv:l[h],bottomleft:o[f],bottomleftuv:l[f],bottomright:o[p],bottomrightuv:l[p]};s(C,d,(function(t,n){let r=i(t.topleft,t.bottomleft,e),o=i(n.topleft,n.bottomleft,e);return r>o?1:r<o?-1:0}))}}for(let t in C){let e=C[t],s=(g[e.polygonindex].length,i(e.topleft,e.bottomleft,b)),l=u.Create(s,b),a=e.topleftuv.lerp(e.bottomleftuv,f(e.topleft,e.bottomleft,l));s=i(e.topright,e.bottomright,b);let h=u.Create(s,b),p=e.toprightuv.lerp(e.bottomrightuv,f(e.topright,e.bottomright,h));s=i(e.topleft,e.bottomleft,n);let d=u.Create(s,n),m=e.topleftuv.lerp(e.bottomleftuv,f(e.topleft,e.bottomleft,d));s=i(e.topright,e.bottomright,n);let y=u.Create(s,n),w={topleft:l,topleftuv:a,topright:h,toprightuv:p,bottomleft:d,bottomleftuv:m,bottomright:y,bottomrightuv:e.toprightuv.lerp(e.bottomrightuv,f(e.topright,e.bottomright,y)),leftline:c.fromPoints(l,d),rightline:c.fromPoints(y,h)};if(o.length>0){let t=o[o.length-1],e=w.topleft.distanceTo(t.topright),n=w.bottomleft.distanceTo(t.bottomright);e<r&&n<r&&(w.topleft=t.topleft,w.topleftuv=t.topleftuv,w.leftline=t.leftline,w.bottomleft=t.bottomleft,w.bottomleftuv=t.bottomleftuv,o.splice(o.length-1,1))}o.push(w)}if(t>0){let t={},n={};for(let e=0;e<o.length;e++){let i=o[e];for(let e=0;e<M.length;e++)if(!n[e]){let o=M[e];if(o.bottomleft.distanceTo(i.topleft)<r&&o.bottomright.distanceTo(i.topright)<r){n[e]=!0;let s=i.leftline.direction().x-o.leftline.direction().x,l=i.rightline.direction().x-o.rightline.direction().x,a=Math.abs(s)<r,u=Math.abs(l)<r,c=u||l>=0;(a||s>=0)&&c&&(i.outpolygon=o.outpolygon,i.leftlinecontinues=a,i.rightlinecontinues=u,t[e]=!0);break}}}for(let n=0;n<M.length;n++)if(!t[n]){let t=M[n];t.outpolygon.rightpoints.push(t.bottomright),t.outpolygon.rightuvcoordinates.push(t.bottomrightuv),t.bottomright.distanceTo(t.bottomleft)>r&&(t.outpolygon.leftpoints.push(t.bottomleft),t.outpolygon.leftuvcoordinates.push(t.bottomleftuv)),t.outpolygon.leftpoints.reverse(),t.outpolygon.leftuvcoordinates.reverse();let o=t.outpolygon.rightpoints.concat(t.outpolygon.leftpoints),i=t.outpolygon.rightuvcoordinates.concat(t.outpolygon.leftuvcoordinates),s=[];o.map((function(t,e){let n=m.to3D(t),r=a.fromPosAndUV(n,i[e]);s.push(r)}));let l=new h(s,d,p);e.push(l)}}for(let t=0;t<o.length;t++){let e=o[t];e.outpolygon?(e.leftlinecontinues||(e.outpolygon.leftpoints.push(e.topleft),e.outpolygon.leftuvcoordinates.push(e.topleftuv)),e.rightlinecontinues||(e.outpolygon.rightpoints.push(e.topright),e.outpolygon.rightuvcoordinates.push(e.toprightuv))):(e.outpolygon={leftpoints:[],leftuvcoordinates:[],rightpoints:[],rightuvcoordinates:[]},e.outpolygon.leftpoints.push(e.topleft),e.outpolygon.leftuvcoordinates.push(e.topleftuv),e.topleft.distanceTo(e.topright)>r&&(e.outpolygon.rightpoints.push(e.topright),e.outpolygon.rightuvcoordinates.push(e.toprightuv)))}M=o}}}},function(t,e,n){const r=n(2);t.exports={area:function(t){let e=0;return t.sides.map((function(t){e+=t.vertex0.pos.cross(t.vertex1.pos)})),e*=.5,e},getBounds:function(t){let e;e=0===t.sides.length?new r(0,0):t.sides[0].vertex0.pos;let n=e;return t.sides.map((function(t){e=e.min(t.vertex0.pos),e=e.min(t.vertex1.pos),n=n.max(t.vertex0.pos),n=n.max(t.vertex1.pos)})),[e,n]}}},function(t,e,n){const r=n(5),o=n(1),i=n(3);t.exports={cagToPointsArray:t=>{let e;return"sides"in t?(e=[],t.sides.forEach(t=>{e.push([t.vertex0.pos.x,t.vertex0.pos.y]),e.push([t.vertex1.pos.x,t.vertex1.pos.y])})):"points"in t&&(e=t.points.map(t=>[t.x,t.y])),e},clamp:function(t,e,n){return Math.min(Math.max(t,e),n)},rightMultiply1x3VectorToArray:(t,e)=>{const[n,r,o]=e;let i=n*t.elements[0]+r*t.elements[1]+o*t.elements[2]+1*t.elements[3],s=n*t.elements[4]+r*t.elements[5]+o*t.elements[6]+1*t.elements[7],l=n*t.elements[8]+r*t.elements[9]+o*t.elements[10]+1*t.elements[11],a=n*t.elements[12]+r*t.elements[13]+o*t.elements[14]+1*t.elements[15];if(1!==a){const t=1/a;i*=t,s*=t,l*=t}return[i,s,l]},polygonFromPoints:t=>{const e=t.map(t=>new r(new o(t)));return new i(e)}}},function(t,e,n){const r=n(19);t.exports=function(t){let e=t.canonicalized(),n={},o={};e.sides.map((function(t){let e=t.getTag();n[e]=t;let r=t.vertex0.getTag();r in o||(o[r]=[]),o[r].push(e)}));let i=[];for(;;){let t=null;for(let e in o){let n=o[e];t=n[0],n.splice(0,1),0===n.length&&delete o[e];break}if(null===t)break;let e=[],s=n[t],l=s.vertex0.getTag();for(;;){e.push(s.vertex0.pos);let t=s.vertex1.getTag();if(t===l)break;if(!(t in o))throw new Error("Area is not closed!");let r=o[t],i=-1;if(1===r.length)i=0;else{let t=null,e=s.direction().angleDegrees();for(let o=0;o<r.length;o++){let s=r[o],l=n[s].direction().angleDegrees()-e;l<-180&&(l+=360),l>=180&&(l-=360),(i<0||l>t)&&(i=o,t=l)}}let a=r[i];r.splice(i,1),0===r.length&&delete o[t],s=n[a]}e.length>0&&e.push(e.shift());let a=new r(e,!0);i.push(a)}return i}},function(t,e){t.exports=function(t){return t?t.constructor!==Array?[t]:t:[]}},function(t,e,n){const r=n(3),{fromPolygons:o}=n(7),{fnSortByIndex:i}=n(6),s=function(t,e,n,o){let s=e.vertices.slice(0),l=n.vertices.slice(0),a=n.shared||null;s[0].pos.equals(s[s.length-1].pos)||s.push(s[0]),l[0].pos.equals(l[l.length-1].pos)||l.push(l[0]),o&&(s=s.reverse(),l=l.reverse());let u,c=l.length-1,h=s.length-1,f=c-h,p=f>0,d=f<0,m=[];for(let t=Math.abs(f);t>0;t--)m.push({len:1/0,index:-1});if(d)for(let t=0;t<h;t++){u=s[t].pos.distanceToSquared(s[t+1].pos);for(let t=m.length-1;t>=0;t--)if(m[t].len>u){m[t].len=u,m.index=t;break}}else if(p)for(let t=0;t<c;t++){u=l[t].pos.distanceToSquared(l[t+1].pos);for(let t=m.length-1;t>=0;t--)if(m[t].len>u){m[t].len=u,m.index=t;break}}m.sort(i);let g,y,w,x=function(t,e,n,o){return new r([t,e,n],o)},v=s[0],b=l[0];for(let e=0,n=0,r=c+h;e+n<r;){if(m.length){if(p&&n===m[0].index){g=l[++n],t.push(x(g,b,v,a)),b=g,m.shift();continue}if(d&&e===m[0].index){g=s[++e],t.push(x(b,v,g,a)),v=g,m.shift();continue}}y=e<h?b.pos.distanceToSquared(s[e+1].pos):1/0,w=n<c?v.pos.distanceToSquared(l[n+1].pos):1/0,y<=w?(g=s[++e],t.push(x(b,v,g,a)),v=g):n<c&&(g=l[++n],t.push(x(g,b,v,a)),b=g)}return t};t.exports=function(t,e){let n,i=[],l=null,a=null,u=null,c=null,h=2,f=!1,p=null;if(e&&(f=Boolean(e.loop),e.numslices&&(h=e.numslices),e.callback&&(n=e.callback)),!n){let t=r.createFromPoints([[0,0,0],[1,0,0],[1,1,0],[0,1,0]]);n=function(e,n){return 0===e||1===e?t.translate([0,0,e]):null}}for(let e=0,o=h-1;e<=o;e++)if(l=n.call(t,e/o,e),l){if(!(l instanceof r))throw new Error("Polygon.solidFromSlices callback error: Polygon expected");l.checkIfConvex(),a?(null===p&&(p=a.plane.signedDistanceToPoint(l.vertices[0].pos)<0),s(i,a,l,p)):u=l,a=l}if(c=l,f){u.vertices.length===c.vertices.length&&u.vertices.every((function(t,e){return t.pos.equals(c.vertices[e].pos)}))||s(i,c,u,p)}else i.unshift(p?u:u.flipped()),i.push(p?c.flipped():c);return o(i)}},function(t,e,n){const{EPS:r}=n(0),o=n(3),i=n(4);function s(t,e,n,r,o,i){let s=r.getTag(),a=o.getTag();if(s===a)throw new Error("Assertion failed");let u=s+"/"+a;if(a+"/"+s in t)return l(t,e,n,o,r,null),null;let c={vertex0:r,vertex1:o,polygonindex:i};return u in t?t[u].push(c):t[u]=[c],s in e?e[s].push(u):e[s]=[u],a in n?n[a].push(u):n[a]=[u],u}function l(t,e,n,r,o,i){let s=r.getTag(),l=o.getTag(),a=s+"/"+l;if(!(a in t))throw new Error("Assertion failed");let u=-1,c=t[a];for(let t=0;t<c.length;t++){let e=c[t];if(e.vertex0===r&&(e.vertex1===o&&(null===i||e.polygonindex===i))){u=t;break}}if(u<0)throw new Error("Assertion failed");if(c.splice(u,1),0===c.length&&delete t[a],u=e[s].indexOf(a),u<0)throw new Error("Assertion failed");if(e[s].splice(u,1),0===e[s].length&&delete e[s],u=n[l].indexOf(a),u<0)throw new Error("Assertion failed");n[l].splice(u,1),0===n[l].length&&delete n[l]}t.exports=function(t,e){e=e.canonicalized();let n={};for(let t=0;t<e.polygons.length;t++){let r=e.polygons[t],o=r.vertices.length;if(o>=3){let e=r.vertices[0],i=e.getTag();for(let s=0;s<o;s++){let l=s+1;l===o&&(l=0);let a=r.vertices[l],u=a.getTag(),c=i+"/"+u,h=u+"/"+i;if(h in n){let t=n[h];t.splice(-1,1),0===t.length&&delete n[h]}else{let r={vertex0:e,vertex1:a,polygonindex:t};c in n?n[c].push(r):n[c]=[r]}e=a,i=u}}}let a={},u={},c={},h=!0;for(let t in n)h=!1,c[t]=!0,n[t].map((function(e){let n=e.vertex0.getTag(),r=e.vertex1.getTag();n in a?a[n].push(t):a[n]=[t],r in u?u[r].push(t):u[r]=[t]}));if(!h){let h=e.polygons.slice(0);for(;;){let t=!0;for(let e in n)t=!1,c[e]=!0;if(t)break;let e=!1;for(;;){let t=null;for(let e in c){t=e;break}if(null===t)break;let f=!0;if(t in n){let p=n[t];if(0===p.length)throw new Error("Assertion failed");let d=p[0];for(let t=0;t<2;t++){let p=0===t?d.vertex0:d.vertex1,m=0===t?d.vertex1:d.vertex0,g=p.getTag(),y=m.getTag(),w=[];0===t?g in u&&(w=u[g]):g in a&&(w=a[g]);for(let d=0;d<w.length;d++){let x=n[w[d]][0],v=0===t?x.vertex0:x.vertex1,b=0===t?x.vertex1:x.vertex0,P=v.getTag();if(b.getTag()!==g)throw new Error("Assertion failed");if(P===y){l(n,a,u,p,m,null),l(n,a,u,m,p,null),f=!1,t=2,e=!0;break}{let d=p.pos,g=m.pos,y=v.pos.minus(d),w=g.minus(d).dot(y)/y.dot(y);if(w>0&&w<1){if(d.plus(y.times(w)).distanceToSquared(g)<r*r){let r=x.polygonindex,p=h[r],d=x.vertex1.getTag(),g=-1;for(let t=0;t<p.vertices.length;t++)if(p.vertices[t].getTag()===d){g=t;break}if(g<0)throw new Error("Assertion failed");let y=p.vertices.slice(0);y.splice(g,0,m);let w=new o(y,p.shared);if(isNaN(w.plane.w)){let t=!1,e=function(e){w.vertices.forEach((function(n){t||e(n)}))};e((function(n){e((function(r){e((function(e){w.plane=i.fromPoints(n.pos,r.pos,e.pos),isNaN(w.plane.w)||(t=!0)}))}))}))}h[r]=w,l(n,a,u,x.vertex0,x.vertex1,r);let v=s(n,a,u,x.vertex0,m,r),b=s(n,a,u,m,x.vertex1,r);null!==v&&(c[v]=!0),null!==b&&(c[b]=!0),f=!1,t=2,e=!0;break}}}}}}f&&delete c[t]}if(!e)break}let f=t(h);f.properties=e.properties,f.isCanonicalized=!0,f.isRetesselated=!0,e=f}return e}},function(t,e,n){const r=n(1);t.exports={bounds:function(t){if(!t.cachedBoundingBox){let e=new r(0,0,0),n=new r(0,0,0),o=t.polygons,i=o.length;for(let t=0;t<i;t++){let r=o[t].boundingBox();0===t?(e=r[0],n=r[1]):(e=e.min(r[0]),n=n.max(r[1]))}t.cachedBoundingBox=[e,n]}return t.cachedBoundingBox},volume:function(t){let e=t.toTriangles().map((function(t){return t.getTetraFeatures(["volume"])}));console.log("volume",e)},area:function(t){let e=t.toTriangles().map((function(t){return t.getTetraFeatures(["area"])}));console.log("area",e)}}},function(t,e,n){const r=n(9),{EPS:o}=n(0);t.exports={projectToOrthoNormalBasis:function(t,e){let n=[];return t.polygons.filter((function(t){return t.plane.normal.minus(e.plane.normal).lengthSquared()<o*o})).map((function(t){let r=t.projectToOrthoNormalBasis(e);r.sides.length>0&&n.push(r)})),(new r).union(n)}}},function(t,e,n){const{EPS:r}=n(0),o=n(4),i=n(2),s=n(5),l=n(3),a=n(11);t.exports={sectionCut:function(t,e){let n=e.plane,i=e.plane.flipped();n=new o(n.normal,n.w),i=new o(i.normal,i.w+5*r);let s=t.cutByPlane(n);return s=s.cutByPlane(i),s.projectToOrthoNormalBasis(e)},cutByPlane:function(t,e){if(0===t.polygons.length){return new(n(12))}let r=e.normal.times(e.w),o=0;t.polygons.map((function(t){t.vertices.map((function(t){let e=t.pos.distanceToSquared(r);e>o&&(o=e)}))})),o=Math.sqrt(o),o*=1.01;let u=[],c=new a(e);u.push(s.fromPosAndUV(c.to3D(new i(o,-o)),new i(o,-o))),u.push(s.fromPosAndUV(c.to3D(new i(-o,-o)),new i(-o,-o))),u.push(s.fromPosAndUV(c.to3D(new i(-o,o)),new i(-o,o))),u.push(s.fromPosAndUV(c.to3D(new i(o,o)),new i(o,o)));const h=new l(u,null,e.flipped()).extrude(e.normal.times(-o));let f=t.intersect(h);return f.properties=t.properties,f}}},function(t,e,n){n(9);const{parseOptionAs2DVector:r,parseOptionAsFloat:o,parseOptionAsInt:i}=n(15),{defaultResolution2D:s}=n(0),l=n(2),a=(n(14),n(19)),{fromCompactBinary:u,fromPoints:c,fromPath2:h,fromSides:f}=n(8),p=function(t){let e,n;if("corner1"in(t=t||{})||"corner2"in t){if("center"in t||"radius"in t)throw new Error("rectangle: should either give a radius and center parameter, or a corner1 and corner2 parameter");let o=r(t,"corner1",[0,0]),i=r(t,"corner2",[1,1]);e=o.plus(i).times(.5),n=i.minus(o).times(.5)}else e=r(t,"center",[0,0]),n=r(t,"radius",[1,1]);n=n.abs();let o=new l(n.x,-n.y),i=[e.plus(n),e.plus(o),e.minus(n),e.minus(o)];return c(i)};t.exports={circle:function(t){let e=r(t=t||{},"center",[0,0]),n=o(t,"radius",1),a=i(t,"resolution",s),u=[];for(let t=0;t<a;t++){let r=2*Math.PI*t/a,o=l.fromAngleRadians(r).times(n).plus(e);u.push(o)}return c(u)},ellipse:function(t){let e=r(t=t||{},"center",[0,0]),n=r(t,"radius",[1,1]);n=n.abs();let o=i(t,"resolution",s),l=new a([[e.x,e.y+n.y]]);return l=l.appendArc([e.x,e.y-n.y],{xradius:n.x,yradius:n.y,xaxisrotation:0,resolution:o,clockwise:!0,large:!1}),l=l.appendArc([e.x,e.y+n.y],{xradius:n.x,yradius:n.y,xaxisrotation:0,resolution:o,clockwise:!0,large:!1}),l=l.close(),h(l)},rectangle:p,roundedRectangle:function(t){let e,n;if("corner1"in(t=t||{})||"corner2"in t){if("center"in t||"radius"in t)throw new Error("roundedRectangle: should either give a radius and center parameter, or a corner1 and corner2 parameter");let o=r(t,"corner1",[0,0]),i=r(t,"corner2",[1,1]);e=o.plus(i).times(.5),n=i.minus(o).times(.5)}else e=r(t,"center",[0,0]),n=r(t,"radius",[1,1]);n=n.abs();let a=o(t,"roundradius",.2),u=i(t,"resolution",s),c=Math.min(n.x,n.y);c-=.1,a=Math.min(a,c),a=Math.max(0,a),n=new l(n.x-a,n.y-a);let h=p({center:e,radius:n});return a>0&&(h=h.expand(a,u)),h},fromCompactBinary:u}},function(t,e,n){const{parseOption:r,parseOptionAs3DVector:o,parseOptionAs2DVector:i,parseOptionAs3DVectorList:s,parseOptionAsFloat:l,parseOptionAsInt:a}=n(15),{defaultResolution3D:u,defaultResolution2D:c,EPS:h}=n(0),f=n(1),p=n(5),d=n(3),{Connector:m}=n(13),g=n(23),{fromPolygons:y}=n(7),w=function(t){let e,n,r,i=o(t=t||{},"center",[0,0,0]),s=l(t,"radius",1),c=a(t,"resolution",u);"axes"in t?(e=t.axes[0].unit().times(s),n=t.axes[1].unit().times(s),r=t.axes[2].unit().times(s)):(e=new f([1,0,0]).times(s),n=new f([0,-1,0]).times(s),r=new f([0,0,1]).times(s)),c<4&&(c=4);let h,m=Math.round(c/4),w=[];for(let t=0;t<=c;t++){let o=2*Math.PI*t/c,s=e.times(Math.cos(o)).plus(n.times(Math.sin(o)));if(t>0){let t,e,n=[];for(let o=0;o<=m;o++){let l=.5*Math.PI*o/m,a=Math.cos(l),u=Math.sin(l);o>0&&(n=[],n.push(new p(i.plus(h.times(t).minus(r.times(e))))),n.push(new p(i.plus(s.times(t).minus(r.times(e))))),o<m&&n.push(new p(i.plus(s.times(a).minus(r.times(u))))),n.push(new p(i.plus(h.times(a).minus(r.times(u))))),w.push(new d(n)),n=[],n.push(new p(i.plus(h.times(t).plus(r.times(e))))),n.push(new p(i.plus(s.times(t).plus(r.times(e))))),o<m&&n.push(new p(i.plus(s.times(a).plus(r.times(u))))),n.push(new p(i.plus(h.times(a).plus(r.times(u))))),n.reverse(),w.push(new d(n))),t=a,e=u}}h=s}let x=y(w);return x.properties.sphere=new g,x.properties.sphere.center=new f(i),x.properties.sphere.facepoint=i.plus(e),x};t.exports={cube:function(t){let e,n,r,i;if("corner1"in(t=t||{})||"corner2"in t){if("center"in t||"radius"in t)throw new Error("cube: should either give a radius and center parameter, or a corner1 and corner2 parameter");r=o(t,"corner1",[0,0,0]),i=o(t,"corner2",[1,1,1]),e=r.plus(i).times(.5),n=i.minus(r).times(.5)}else e=o(t,"center",[0,0,0]),n=o(t,"radius",[1,1,1]);n=n.abs();let s=y([[[0,4,6,2],[-1,0,0]],[[1,3,7,5],[1,0,0]],[[0,1,5,4],[0,-1,0]],[[2,6,7,3],[0,1,0]],[[0,2,3,1],[0,0,-1]],[[4,5,7,6],[0,0,1]]].map((function(t){let r=t[0].map((function(t){let r=new f(e.x+n.x*(2*!!(1&t)-1),e.y+n.y*(2*!!(2&t)-1),e.z+n.z*(2*!!(4&t)-1));return new p(r)}));return new d(r,null)})));return s.properties.cube=new g,s.properties.cube.center=new f(e),s.properties.cube.facecenters=[new m(new f([n.x,0,0]).plus(e),[1,0,0],[0,0,1]),new m(new f([-n.x,0,0]).plus(e),[-1,0,0],[0,0,1]),new m(new f([0,n.y,0]).plus(e),[0,1,0],[0,0,1]),new m(new f([0,-n.y,0]).plus(e),[0,-1,0],[0,0,1]),new m(new f([0,0,n.z]).plus(e),[0,0,1],[1,0,0]),new m(new f([0,0,-n.z]).plus(e),[0,0,-1],[1,0,0])],s},sphere:w,roundedCube:function(t){let e,n,r,i;if("corner1"in(t=t||{})||"corner2"in t){if("center"in t||"radius"in t)throw new Error("roundedCube: should either give a radius and center parameter, or a corner1 and corner2 parameter");r=o(t,"corner1",[0,0,0]),i=o(t,"corner2",[1,1,1]),e=r.plus(i).times(.5),n=i.minus(r).times(.5)}else e=o(t,"center",[0,0,0]),n=o(t,"radius",[1,1,1]);n=n.abs();let s=a(t,"resolution",u);s<4&&(s=4),s%2==1&&s<8&&(s=8);let l=o(t,"roundradius",[.2,.2,.2]);l=f.Create(Math.max(l.x,.01),Math.max(l.y,.01),Math.max(l.z,.01));let c=n.minus(l);if(c.x<0||c.y<0||c.z<0)throw new Error("roundradius <= radius!");let d=w({radius:1,resolution:s});return d=d.scale(l),c.x>h&&(d=d.stretchAtPlane([1,0,0],[0,0,0],2*c.x)),c.y>h&&(d=d.stretchAtPlane([0,1,0],[0,0,0],2*c.y)),c.z>h&&(d=d.stretchAtPlane([0,0,1],[0,0,0],2*c.z)),d=d.translate([-c.x+e.x,-c.y+e.y,-c.z+e.z]),d=d.reTesselated(),d.properties.roundedCube=new g,d.properties.roundedCube.center=new p(e),d.properties.roundedCube.facecenters=[new m(new f([n.x,0,0]).plus(e),[1,0,0],[0,0,1]),new m(new f([-n.x,0,0]).plus(e),[-1,0,0],[0,0,1]),new m(new f([0,n.y,0]).plus(e),[0,1,0],[0,0,1]),new m(new f([0,-n.y,0]).plus(e),[0,-1,0],[0,0,1]),new m(new f([0,0,n.z]).plus(e),[0,0,1],[1,0,0]),new m(new f([0,0,-n.z]).plus(e),[0,0,-1],[1,0,0])],d},cylinder:function(t){let e=o(t,"start",[0,-1,0]),n=o(t,"end",[0,1,0]),r=l(t,"radius",1),i=l(t,"radiusEnd",r),s=l(t,"radiusStart",r),u=l(t,"sectorAngle",360);if(u=u>360?u%360:u,i<0||s<0)throw new Error("Radius should be non-negative");if(0===i&&0===s)throw new Error("Either radiusStart or radiusEnd should be positive");let h=a(t,"resolution",c),f=n.minus(e),w=f.unit(),x=w.randomNonParallelVector().unit(),v=x.cross(w).unit(),b=new p(e),P=new p(n),_=[];function C(t,n,r){let o=n*Math.PI*u/180,i=x.times(Math.cos(o)).plus(v.times(Math.sin(o))),s=e.plus(f.times(t)).plus(i.times(r));return new p(s)}if(u>0){for(let t=0;t<h;t++){let e=t/h,n=(t+1)/h;i===s?(_.push(new d([b,C(0,e,i),C(0,n,i)])),_.push(new d([C(0,n,i),C(0,e,i),C(1,e,i),C(1,n,i)])),_.push(new d([P,C(1,n,i),C(1,e,i)]))):(s>0&&(_.push(new d([b,C(0,e,s),C(0,n,s)])),_.push(new d([C(0,e,s),C(1,e,i),C(0,n,s)]))),i>0&&(_.push(new d([P,C(1,n,i),C(1,e,i)])),_.push(new d([C(1,e,i),C(1,n,i),C(0,n,s)]))))}u<360&&(_.push(new d([b,P,C(0,0,s)])),_.push(new d([C(0,0,s),P,C(1,0,i)])),_.push(new d([b,C(0,1,s),P])),_.push(new d([C(0,1,s),C(1,1,i),P])))}let M=y(_);M.properties.cylinder=new g,M.properties.cylinder.start=new m(e,w.negated(),x),M.properties.cylinder.end=new m(n,w,x);let T=e.plus(f.times(.5)),S=x.rotate(e,w,-u/2).times((s+i)/2),A=S.cross(w);return M.properties.cylinder.facepointH=new m(T.plus(S),S,w),M.properties.cylinder.facepointH90=new m(T.plus(A),A,w),M},roundedCylinder:function(t){let e,n=o(t,"start",[0,-1,0]),r=o(t,"end",[0,1,0]),i=l(t,"radius",1),s=r.minus(n);e=Math.abs(s.x)>Math.abs(s.y)?new f(0,1,0):new f(1,0,0);let c=o(t,"normal",e),x=a(t,"resolution",u);x<4&&(x=4);let v=[],b=Math.floor(.25*x);if(s.length()<h)return w({center:n,radius:i,resolution:x});let P,_=s.unit().times(i),C=_.cross(c).unit().times(i),M=C.cross(_).unit().times(i);for(let t=0;t<=x;t++){let e=2*Math.PI*t/x,o=C.times(Math.cos(e)).plus(M.times(Math.sin(e)));if(t>0){let t,e,i=[];i.push(new p(n.plus(o))),i.push(new p(n.plus(P))),i.push(new p(r.plus(P))),i.push(new p(r.plus(o))),v.push(new d(i));for(let s=0;s<=b;s++){let l=.5*Math.PI*s/b,a=Math.cos(l),u=Math.sin(l);s>0&&(i=[],i.push(new p(n.plus(P.times(t).minus(_.times(e))))),i.push(new p(n.plus(o.times(t).minus(_.times(e))))),s<b&&i.push(new p(n.plus(o.times(a).minus(_.times(u))))),i.push(new p(n.plus(P.times(a).minus(_.times(u))))),v.push(new d(i)),i=[],i.push(new p(r.plus(P.times(t).plus(_.times(e))))),i.push(new p(r.plus(o.times(t).plus(_.times(e))))),s<b&&i.push(new p(r.plus(o.times(a).plus(_.times(u))))),i.push(new p(r.plus(P.times(a).plus(_.times(u))))),i.reverse(),v.push(new d(i))),t=a,e=u}}P=o}let T=y(v),S=_.unit(),A=C.unit();return T.properties.roundedCylinder=new g,T.properties.roundedCylinder.start=new m(n,S.negated(),A),T.properties.roundedCylinder.end=new m(r,S,A),T.properties.roundedCylinder.facepoint=n.plus(C),T},cylinderElliptic:function(t){let e=o(t,"start",[0,-1,0]),n=o(t,"end",[0,1,0]),r=i(t,"radius",[1,1]),s=i(t,"radiusEnd",r),l=i(t,"radiusStart",r);if(s._x<0||l._x<0||s._y<0||l._y<0)throw new Error("Radius should be non-negative");if(!(0!==s._x&&0!==s._y||0!==l._x&&0!==l._y))throw new Error("Either radiusStart or radiusEnd should be positive");let u=a(t,"resolution",c),h=n.minus(e),f=h.unit(),w=f.randomNonParallelVector().unit(),x=w.cross(f).unit(),v=new p(e),b=new p(n),P=[];function _(t,n,r){let o=n*Math.PI*2,i=w.times(r._x*Math.cos(o)).plus(x.times(r._y*Math.sin(o))),s=e.plus(h.times(t)).plus(i);return new p(s)}for(let t=0;t<u;t++){let e=t/u,n=(t+1)/u;s._x===l._x&&s._y===l._y?(P.push(new d([v,_(0,e,s),_(0,n,s)])),P.push(new d([_(0,n,s),_(0,e,s),_(1,e,s),_(1,n,s)])),P.push(new d([b,_(1,n,s),_(1,e,s)]))):(l._x>0&&(P.push(new d([v,_(0,e,l),_(0,n,l)])),P.push(new d([_(0,e,l),_(1,e,s),_(0,n,l)]))),s._x>0&&(P.push(new d([b,_(1,n,s),_(1,e,s)])),P.push(new d([_(1,e,s),_(1,n,s),_(0,n,l)]))))}let C=y(P);return C.properties.cylinder=new g,C.properties.cylinder.start=new m(e,f.negated(),w),C.properties.cylinder.end=new m(n,f,w),C.properties.cylinder.facepoint=e.plus(w.times(l)),C},polyhedron:function(t){if("points"in(t=t||{})!="faces"in t)throw new Error("polyhedron needs 'points' and 'faces' arrays");let e=s(t,"points",[[1,1,0],[1,-1,0],[-1,-1,0],[-1,1,0],[0,0,1]]).map((function(t){return new p(t)})),n=r(t,"faces",[[0,1,4],[1,2,4],[2,3,4],[3,0,4],[1,0,3],[2,1,3]]);n.forEach((function(t){t.reverse()}));let o=n.map((function(t){return new d(t.map((function(t){return e[t]})))}));return y(o).reTesselated()}}},function(t,e){const n={black:[0,0,0],silver:[192/255,192/255,192/255],gray:[128/255,128/255,128/255],white:[1,1,1],maroon:[128/255,0,0],red:[1,0,0],purple:[128/255,0,128/255],fuchsia:[1,0,1],green:[0,128/255,0],lime:[0,1,0],olive:[128/255,128/255,0],yellow:[1,1,0],navy:[0,0,128/255],blue:[0,0,1],teal:[0,128/255,128/255],aqua:[0,1,1],aliceblue:[240/255,248/255,1],antiquewhite:[250/255,235/255,215/255],aquamarine:[127/255,1,212/255],azure:[240/255,1,1],beige:[245/255,245/255,220/255],bisque:[1,228/255,196/255],blanchedalmond:[1,235/255,205/255],blueviolet:[138/255,43/255,226/255],brown:[165/255,42/255,42/255],burlywood:[222/255,184/255,135/255],cadetblue:[95/255,158/255,160/255],chartreuse:[127/255,1,0],chocolate:[210/255,105/255,30/255],coral:[1,127/255,80/255],cornflowerblue:[100/255,149/255,237/255],cornsilk:[1,248/255,220/255],crimson:[220/255,20/255,60/255],cyan:[0,1,1],darkblue:[0,0,139/255],darkcyan:[0,139/255,139/255],darkgoldenrod:[184/255,134/255,11/255],darkgray:[169/255,169/255,169/255],darkgreen:[0,100/255,0],darkgrey:[169/255,169/255,169/255],darkkhaki:[189/255,183/255,107/255],darkmagenta:[139/255,0,139/255],darkolivegreen:[85/255,107/255,47/255],darkorange:[1,140/255,0],darkorchid:[.6,50/255,.8],darkred:[139/255,0,0],darksalmon:[233/255,150/255,122/255],darkseagreen:[143/255,188/255,143/255],darkslateblue:[72/255,61/255,139/255],darkslategray:[47/255,79/255,79/255],darkslategrey:[47/255,79/255,79/255],darkturquoise:[0,206/255,209/255],darkviolet:[148/255,0,211/255],deeppink:[1,20/255,147/255],deepskyblue:[0,191/255,1],dimgray:[105/255,105/255,105/255],dimgrey:[105/255,105/255,105/255],dodgerblue:[30/255,144/255,1],firebrick:[178/255,34/255,34/255],floralwhite:[1,250/255,240/255],forestgreen:[34/255,139/255,34/255],gainsboro:[220/255,220/255,220/255],ghostwhite:[248/255,248/255,1],gold:[1,215/255,0],goldenrod:[218/255,165/255,32/255],greenyellow:[173/255,1,47/255],grey:[128/255,128/255,128/255],honeydew:[240/255,1,240/255],hotpink:[1,105/255,180/255],indianred:[205/255,92/255,92/255],indigo:[75/255,0,130/255],ivory:[1,1,240/255],khaki:[240/255,230/255,140/255],lavender:[230/255,230/255,250/255],lavenderblush:[1,240/255,245/255],lawngreen:[124/255,252/255,0],lemonchiffon:[1,250/255,205/255],lightblue:[173/255,216/255,230/255],lightcoral:[240/255,128/255,128/255],lightcyan:[224/255,1,1],lightgoldenrodyellow:[250/255,250/255,210/255],lightgray:[211/255,211/255,211/255],lightgreen:[144/255,238/255,144/255],lightgrey:[211/255,211/255,211/255],lightpink:[1,182/255,193/255],lightsalmon:[1,160/255,122/255],lightseagreen:[32/255,178/255,170/255],lightskyblue:[135/255,206/255,250/255],lightslategray:[119/255,136/255,.6],lightslategrey:[119/255,136/255,.6],lightsteelblue:[176/255,196/255,222/255],lightyellow:[1,1,224/255],limegreen:[50/255,205/255,50/255],linen:[250/255,240/255,230/255],magenta:[1,0,1],mediumaquamarine:[.4,205/255,170/255],mediumblue:[0,0,205/255],mediumorchid:[186/255,85/255,211/255],mediumpurple:[147/255,112/255,219/255],mediumseagreen:[60/255,179/255,113/255],mediumslateblue:[123/255,104/255,238/255],mediumspringgreen:[0,250/255,154/255],mediumturquoise:[72/255,209/255,.8],mediumvioletred:[199/255,21/255,133/255],midnightblue:[25/255,25/255,112/255],mintcream:[245/255,1,250/255],mistyrose:[1,228/255,225/255],moccasin:[1,228/255,181/255],navajowhite:[1,222/255,173/255],oldlace:[253/255,245/255,230/255],olivedrab:[107/255,142/255,35/255],orange:[1,165/255,0],orangered:[1,69/255,0],orchid:[218/255,112/255,214/255],palegoldenrod:[238/255,232/255,170/255],palegreen:[152/255,251/255,152/255],paleturquoise:[175/255,238/255,238/255],palevioletred:[219/255,112/255,147/255],papayawhip:[1,239/255,213/255],peachpuff:[1,218/255,185/255],peru:[205/255,133/255,63/255],pink:[1,192/255,203/255],plum:[221/255,160/255,221/255],powderblue:[176/255,224/255,230/255],rosybrown:[188/255,143/255,143/255],royalblue:[65/255,105/255,225/255],saddlebrown:[139/255,69/255,19/255],salmon:[250/255,128/255,114/255],sandybrown:[244/255,164/255,96/255],seagreen:[46/255,139/255,87/255],seashell:[1,245/255,238/255],sienna:[160/255,82/255,45/255],skyblue:[135/255,206/255,235/255],slateblue:[106/255,90/255,205/255],slategray:[112/255,128/255,144/255],slategrey:[112/255,128/255,144/255],snow:[1,250/255,250/255],springgreen:[0,1,127/255],steelblue:[70/255,130/255,180/255],tan:[210/255,180/255,140/255],thistle:[216/255,191/255,216/255],tomato:[1,99/255,71/255],turquoise:[64/255,224/255,208/255],violet:[238/255,130/255,238/255],wheat:[245/255,222/255,179/255],whitesmoke:[245/255,245/255,245/255],yellowgreen:[154/255,205/255,50/255]};function r(t){return n[t.toLowerCase()]}function o(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+(e-t)*(2/3-n)*6:t}t.exports={css2rgb:r,color:function(t){let e,n=1,o=arguments;for("string"==typeof t&&(t=r(t)),Number.isFinite(o[n])&&(t=t.concat(o[n]),n++),Array.isArray(o[n])&&(o=o[n],n=0),e=o[n++];n<o.length;n++)e=e.union(o[n]);return e.setColor(t)},rgb2hsl:function(t,e,n){t.length&&(n=t[2],e=t[1],t=t[0]);let r,o,i=Math.max(t,e,n),s=Math.min(t,e,n),l=(i+s)/2;if(i===s)r=o=0;else{let a=i-s;switch(o=l>.5?a/(2-i-s):a/(i+s),i){case t:r=(e-n)/a+(e<n?6:0);break;case e:r=(n-t)/a+2;break;case n:r=(t-e)/a+4}r/=6}return[r,o,l]},hsl2rgb:function(t,e,n){let r,i,s;if(t.length&&(e=(t=t[0])[1],n=t[2]),0===e)r=i=s=n;else{let l=n<.5?n*(1+e):n+e-n*e,a=2*n-l;r=o(a,l,t+1/3),i=o(a,l,t),s=o(a,l,t-1/3)}return[r,i,s]},rgb2hsv:function(t,e,n){t.length&&(e=(t=t[0])[1],n=t[2]);let r,o,i=Math.max(t,e,n),s=Math.min(t,e,n),l=i,a=i-s;if(o=0===i?0:a/i,i===s)r=0;else{switch(i){case t:r=(e-n)/a+(e<n?6:0);break;case e:r=(n-t)/a+2;break;case n:r=(t-e)/a+4}r/=6}return[r,o,l]},hsv2rgb:function(t,e,n){let r,o,i;t.length&&(e=(t=t[0])[1],n=t[2]);let s=Math.floor(6*t),l=6*t-s,a=n*(1-e),u=n*(1-l*e),c=n*(1-(1-l)*e);switch(s%6){case 0:r=n,o=c,i=a;break;case 1:r=u,o=n,i=a;break;case 2:r=a,o=n,i=c;break;case 3:r=a,o=u,i=n;break;case 4:r=c,o=a,i=n;break;case 5:r=n,o=a,i=u}return[r,o,i]},html2rgb:function(t){let e=0,n=0,r=0;return 7===t.length&&(e=parseInt("0x"+t.slice(1,3))/255,n=parseInt("0x"+t.slice(3,5))/255,r=parseInt("0x"+t.slice(5,7))/255),[e,n,r]},rgb2html:function(t,e,n){return t.length&&(e=(t=t[0])[1],n=t[2]),"#"+Number(16777216+255*t*65536+255*e*256+255*n).toString(16).substring(1,7)}}},function(t,e){function n(t){return Math.floor(t)}function r(t){return Math.abs(t)}t.exports={sin:function(t){return Math.sin(t/360*Math.PI*2)},cos:function(t){return Math.cos(t/360*Math.PI*2)},asin:function(t){return Math.asin(t)/(2*Math.PI)*360},acos:function(t){return Math.acos(t)/(2*Math.PI)*360},tan:function(t){return Math.tan(t/360*Math.PI*2)},atan:function(t){return Math.atan(t)/(2*Math.PI)*360},atan2:function(t,e){return Math.atan2(t,e)/(2*Math.PI)*360},ceil:function(t){return Math.ceil(t)},floor:n,abs:r,min:function(t,e){return t<e?t:e},max:function(t,e){return t>e?t:e},rands:function(t,e,n,r){for(var o=new Array(n),i=0;i<n;i++)o[i]=Math.random()*(e-t)+t},log:function(t){return Math.log(t)},lookup:function(t,e){for(var n=0,o=0;o<e.length;o++){var i=e[o];if(i[0]>=t){i=e[--o];var s=e[o+1],l=0;return i[0]!==s[0]&&(l=r((t-i[0])/(s[0]-i[0]))),n=l>0?i[1]*(1-l)+s[1]*l:i[1]}}return n},pow:function(t,e){return Math.pow(t,e)},sign:function(t){return t<0?-1:t>1?1:0},sqrt:function(t){return Math.sqrt(t)},round:function(t){return n(t+.5)}}},function(t,e,n){const r=n(58),{union:o}=n(18),i={xOffset:0,yOffset:0,input:"?",align:"left",font:r,height:14,lineSpacing:2.142857142857143,letterSpacing:1,extrudeOffset:0};function s(t,e){e||"string"!=typeof t||(t={input:t}),t=t||{};let n=Object.assign({},i,t);return n.input=e||n.input,n}function l(t,e){const{x:n,y:r}=Object.assign({x:0,y:0},t||{});let o=e.segments,i=null,s=null;for(let t=0,e=o.length;t<e;t++){i=o[t];for(let t=0,e=i.length;t<e;t++)s=i[t],i[t]=[s[0]+n,s[1]+r]}return e}function a(t,e){let{xOffset:n,yOffset:r,input:o,font:i,height:l,extrudeOffset:a}=s(t,e),u=o.charCodeAt(0);u&&i[u]||(u=63);let c=[].concat(i[u]),h=(l-a)/i.height,f=a/2,p=c.shift()*h,d=[],m=[];for(let t=0,e=c.length;t<e;t+=2)gx=h*c[t]+n,gy=h*c[t+1]+r+f,void 0===c[t]?(d.push(m),m=[],t--):m.push([gx,gy]);return m.length&&d.push(m),{width:p,height:l,segments:d}}function u(t,e){let{xOffset:n,yOffset:r,input:o,font:i,height:u,align:c,extrudeOffset:h,lineSpacing:f,letterSpacing:p}=s(t,e),[d,m]=[n,r],[g,y,w,x,v,b]=[],P={width:0,segments:[]},_=[],C=[],M=0,T=d;const S=()=>{_.push(P),M=Math.max(M,P.width),P={width:0,segments:[]}};for(g=0,y=o.length;g<y;g++)w=o[g],x=a({xOffset:d,yOffset:m,font:i,height:u,extrudeOffset:h},w),"\n"!==w?(v=x.width*p,P.width+=v,d+=v," "!==w&&(P.segments=P.segments.concat(x.segments))):(d=T,m-=x.height*f,S());for(P.segments.length&&S(),g=0,y=_.length;g<y;g++)P=_[g],M>P.width&&(b=M-P.width,"right"===c?P=l({x:b},P):"center"===c&&(P=l({x:b/2},P))),C=C.concat(P.segments);return C}t.exports={vector_char:function(t,e,n){return a({xOffset:t,yOffset:e},n)},vector_text:function(t,e,n){return u({xOffset:t,yOffset:e},n)},vectorChar:a,vectorText:u}},function(t,e){t.exports={height:14,32:[16],33:[10,5,21,5,7,,5,2,4,1,5,0,6,1,5,2],34:[16,4,21,4,14,,12,21,12,14],35:[21,11,25,4,-7,,17,25,10,-7,,4,12,18,12,,3,6,17,6],36:[20,8,25,8,-4,,12,25,12,-4,,17,18,15,20,12,21,8,21,5,20,3,18,3,16,4,14,5,13,7,12,13,10,15,9,16,8,17,6,17,3,15,1,12,0,8,0,5,1,3,3],37:[24,21,21,3,0,,8,21,10,19,10,17,9,15,7,14,5,14,3,16,3,18,4,20,6,21,8,21,10,20,13,19,16,19,19,20,21,21,,17,7,15,6,14,4,14,2,16,0,18,0,20,1,21,3,21,5,19,7,17,7],38:[26,23,12,23,13,22,14,21,14,20,13,19,11,17,6,15,3,13,1,11,0,7,0,5,1,4,2,3,4,3,6,4,8,5,9,12,13,13,14,14,16,14,18,13,20,11,21,9,20,8,18,8,16,9,13,11,10,16,3,18,1,20,0,22,0,23,1,23,2],39:[10,5,19,4,20,5,21,6,20,6,18,5,16,4,15],40:[14,11,25,9,23,7,20,5,16,4,11,4,7,5,2,7,-2,9,-5,11,-7],41:[14,3,25,5,23,7,20,9,16,10,11,10,7,9,2,7,-2,5,-5,3,-7],42:[16,8,21,8,9,,3,18,13,12,,13,18,3,12],43:[26,13,18,13,0,,4,9,22,9],44:[10,6,1,5,0,4,1,5,2,6,1,6,-1,5,-3,4,-4],45:[26,4,9,22,9],46:[10,5,2,4,1,5,0,6,1,5,2],47:[22,20,25,2,-7],48:[20,9,21,6,20,4,17,3,12,3,9,4,4,6,1,9,0,11,0,14,1,16,4,17,9,17,12,16,17,14,20,11,21,9,21],49:[20,6,17,8,18,11,21,11,0],50:[20,4,16,4,17,5,19,6,20,8,21,12,21,14,20,15,19,16,17,16,15,15,13,13,10,3,0,17,0],51:[20,5,21,16,21,10,13,13,13,15,12,16,11,17,8,17,6,16,3,14,1,11,0,8,0,5,1,4,2,3,4],52:[20,13,21,3,7,18,7,,13,21,13,0],53:[20,15,21,5,21,4,12,5,13,8,14,11,14,14,13,16,11,17,8,17,6,16,3,14,1,11,0,8,0,5,1,4,2,3,4],54:[20,16,18,15,20,12,21,10,21,7,20,5,17,4,12,4,7,5,3,7,1,10,0,11,0,14,1,16,3,17,6,17,7,16,10,14,12,11,13,10,13,7,12,5,10,4,7],55:[20,17,21,7,0,,3,21,17,21],56:[20,8,21,5,20,4,18,4,16,5,14,7,13,11,12,14,11,16,9,17,7,17,4,16,2,15,1,12,0,8,0,5,1,4,2,3,4,3,7,4,9,6,11,9,12,13,13,15,14,16,16,16,18,15,20,12,21,8,21],57:[20,16,14,15,11,13,9,10,8,9,8,6,9,4,11,3,14,3,15,4,18,6,20,9,21,10,21,13,20,15,18,16,14,16,9,15,4,13,1,10,0,8,0,5,1,4,3],58:[10,5,14,4,13,5,12,6,13,5,14,,5,2,4,1,5,0,6,1,5,2],59:[10,5,14,4,13,5,12,6,13,5,14,,6,1,5,0,4,1,5,2,6,1,6,-1,5,-3,4,-4],60:[24,20,18,4,9,20,0],61:[26,4,12,22,12,,4,6,22,6],62:[24,4,18,20,9,4,0],63:[18,3,16,3,17,4,19,5,20,7,21,11,21,13,20,14,19,15,17,15,15,14,13,13,12,9,10,9,7,,9,2,8,1,9,0,10,1,9,2],64:[27,18,13,17,15,15,16,12,16,10,15,9,14,8,11,8,8,9,6,11,5,14,5,16,6,17,8,,12,16,10,14,9,11,9,8,10,6,11,5,,18,16,17,8,17,6,19,5,21,5,23,7,24,10,24,12,23,15,22,17,20,19,18,20,15,21,12,21,9,20,7,19,5,17,4,15,3,12,3,9,4,6,5,4,7,2,9,1,12,0,15,0,18,1,20,2,21,3,,19,16,18,8,18,6,19,5],65:[18,9,21,1,0,,9,21,17,0,,4,7,14,7],66:[21,4,21,4,0,,4,21,13,21,16,20,17,19,18,17,18,15,17,13,16,12,13,11,,4,11,13,11,16,10,17,9,18,7,18,4,17,2,16,1,13,0,4,0],67:[21,18,16,17,18,15,20,13,21,9,21,7,20,5,18,4,16,3,13,3,8,4,5,5,3,7,1,9,0,13,0,15,1,17,3,18,5],68:[21,4,21,4,0,,4,21,11,21,14,20,16,18,17,16,18,13,18,8,17,5,16,3,14,1,11,0,4,0],69:[19,4,21,4,0,,4,21,17,21,,4,11,12,11,,4,0,17,0],70:[18,4,21,4,0,,4,21,17,21,,4,11,12,11],71:[21,18,16,17,18,15,20,13,21,9,21,7,20,5,18,4,16,3,13,3,8,4,5,5,3,7,1,9,0,13,0,15,1,17,3,18,5,18,8,,13,8,18,8],72:[22,4,21,4,0,,18,21,18,0,,4,11,18,11],73:[8,4,21,4,0],74:[16,12,21,12,5,11,2,10,1,8,0,6,0,4,1,3,2,2,5,2,7],75:[21,4,21,4,0,,18,21,4,7,,9,12,18,0],76:[17,4,21,4,0,,4,0,16,0],77:[24,4,21,4,0,,4,21,12,0,,20,21,12,0,,20,21,20,0],78:[22,4,21,4,0,,4,21,18,0,,18,21,18,0],79:[22,9,21,7,20,5,18,4,16,3,13,3,8,4,5,5,3,7,1,9,0,13,0,15,1,17,3,18,5,19,8,19,13,18,16,17,18,15,20,13,21,9,21],80:[21,4,21,4,0,,4,21,13,21,16,20,17,19,18,17,18,14,17,12,16,11,13,10,4,10],81:[22,9,21,7,20,5,18,4,16,3,13,3,8,4,5,5,3,7,1,9,0,13,0,15,1,17,3,18,5,19,8,19,13,18,16,17,18,15,20,13,21,9,21,,12,4,18,-2],82:[21,4,21,4,0,,4,21,13,21,16,20,17,19,18,17,18,15,17,13,16,12,13,11,4,11,,11,11,18,0],83:[20,17,18,15,20,12,21,8,21,5,20,3,18,3,16,4,14,5,13,7,12,13,10,15,9,16,8,17,6,17,3,15,1,12,0,8,0,5,1,3,3],84:[16,8,21,8,0,,1,21,15,21],85:[22,4,21,4,6,5,3,7,1,10,0,12,0,15,1,17,3,18,6,18,21],86:[18,1,21,9,0,,17,21,9,0],87:[24,2,21,7,0,,12,21,7,0,,12,21,17,0,,22,21,17,0],88:[20,3,21,17,0,,17,21,3,0],89:[18,1,21,9,11,9,0,,17,21,9,11],90:[20,17,21,3,0,,3,21,17,21,,3,0,17,0],91:[14,4,25,4,-7,,5,25,5,-7,,4,25,11,25,,4,-7,11,-7],92:[14,0,21,14,-3],93:[14,9,25,9,-7,,10,25,10,-7,,3,25,10,25,,3,-7,10,-7],94:[16,6,15,8,18,10,15,,3,12,8,17,13,12,,8,17,8,0],95:[16,0,-2,16,-2],96:[10,6,21,5,20,4,18,4,16,5,15,6,16,5,17],97:[19,15,14,15,0,,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],98:[19,4,21,4,0,,4,11,6,13,8,14,11,14,13,13,15,11,16,8,16,6,15,3,13,1,11,0,8,0,6,1,4,3],99:[18,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],100:[19,15,21,15,0,,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],101:[18,3,8,15,8,15,10,14,12,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],102:[12,10,21,8,21,6,20,5,17,5,0,,2,14,9,14],103:[19,15,14,15,-2,14,-5,13,-6,11,-7,8,-7,6,-6,,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],104:[19,4,21,4,0,,4,10,7,13,9,14,12,14,14,13,15,10,15,0],105:[8,3,21,4,20,5,21,4,22,3,21,,4,14,4,0],106:[10,5,21,6,20,7,21,6,22,5,21,,6,14,6,-3,5,-6,3,-7,1,-7],107:[17,4,21,4,0,,14,14,4,4,,8,8,15,0],108:[8,4,21,4,0],109:[30,4,14,4,0,,4,10,7,13,9,14,12,14,14,13,15,10,15,0,,15,10,18,13,20,14,23,14,25,13,26,10,26,0],110:[19,4,14,4,0,,4,10,7,13,9,14,12,14,14,13,15,10,15,0],111:[19,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3,16,6,16,8,15,11,13,13,11,14,8,14],112:[19,4,14,4,-7,,4,11,6,13,8,14,11,14,13,13,15,11,16,8,16,6,15,3,13,1,11,0,8,0,6,1,4,3],113:[19,15,14,15,-7,,15,11,13,13,11,14,8,14,6,13,4,11,3,8,3,6,4,3,6,1,8,0,11,0,13,1,15,3],114:[13,4,14,4,0,,4,8,5,11,7,13,9,14,12,14],115:[17,14,11,13,13,10,14,7,14,4,13,3,11,4,9,6,8,11,7,13,6,14,4,14,3,13,1,10,0,7,0,4,1,3,3],116:[12,5,21,5,4,6,1,8,0,10,0,,2,14,9,14],117:[19,4,14,4,4,5,1,7,0,10,0,12,1,15,4,,15,14,15,0],118:[16,2,14,8,0,,14,14,8,0],119:[22,3,14,7,0,,11,14,7,0,,11,14,15,0,,19,14,15,0],120:[17,3,14,14,0,,14,14,3,0],121:[16,2,14,8,0,,14,14,8,0,6,-4,4,-6,2,-7,1,-7],122:[17,14,14,3,0,,3,14,14,14,,3,0,14,0],123:[14,9,25,7,24,6,23,5,21,5,19,6,17,7,16,8,14,8,12,6,10,,7,24,6,22,6,20,7,18,8,17,9,15,9,13,8,11,4,9,8,7,9,5,9,3,8,1,7,0,6,-2,6,-4,7,-6,,6,8,8,6,8,4,7,2,6,1,5,-1,5,-3,6,-5,7,-6,9,-7],124:[8,4,25,4,-7],125:[14,5,25,7,24,8,23,9,21,9,19,8,17,7,16,6,14,6,12,8,10,,7,24,8,22,8,20,7,18,6,17,5,15,5,13,6,11,10,9,6,7,5,5,5,3,6,1,7,0,8,-2,8,-4,7,-6,,8,8,6,6,6,4,7,2,8,1,9,-1,9,-3,8,-5,7,-6,5,-7],126:[24,3,6,3,8,4,11,6,12,8,12,10,11,14,8,16,7,18,7,20,8,21,10,,3,8,4,10,6,11,8,11,10,10,14,7,16,6,18,6,20,7,21,10,21,12]}}])}));